{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"A User-Focused Photo &amp; File Management System TagStudio Alpha v9.5.5 running on macOS Sequoia. <p>TagStudio is a photo &amp; file organization application with an underlying tag-based system that focuses on giving freedom and flexibility to the user. No proprietary programs or formats, no sea of sidecar files, and no complete upheaval of your filesystem structure.</p>  Download Latest Release"},{"location":"#core-features","title":"Core Features","text":"<ul> <li> <p> All Files Welcome</p> <p>TagStudio works with photos, videos, music, documents, and more! All file types are recognized by TagStudio, with most common ones having built-in preview support.</p> <p> See Full Preview Support</p> </li> <li> <p> Create Tags Your Way</p> <ul> <li> No character restrictions</li> <li> Add aliases/alternate names</li> <li> Customize colors and styles</li> <li> Tags can be tagged with other tags!</li> <li> And more!</li> </ul> </li> <li> <p> Powerful Search</p> <ul> <li>Full Boolean operator support</li> <li>Filenames, paths, and extensions with glob syntax</li> <li>General media types (e.g. \"Photo\", \"Video\", \"Document\")</li> <li>Special searches (e.g. \"Untagged\")</li> <li>\"Smartcase\" case sensitivity</li> </ul> </li> <li> <p> Text and Date Fields</p> <p>Along with tags, add custom metadata fields such as text and dates to your files!</p> <p>This is useful for adding notes and descriptions, titling files, and keeping track of extra dates and times.</p> </li> </ul>"},{"location":"#built-different","title":"Built Different","text":"<ul> <li> <p> Open Source</p> <p>TagStudio is licensed under the GPL-3.0 license with the source code and executable releases available on GitHub.</p> <p> View License</p> <p> Roadmap to MIT Core Library License</p> </li> <li> <p> Central Save File</p> <p>Apposed to filling your drives with sidecar files, TagStudio uses a project-like library system that stores your tags and metadata inside a single save file per-library.</p> <p> Learn About the Format</p> </li> </ul>"},{"location":"#more-than-an-application","title":"More Than an Application","text":"<p>TagStudio aims to create an open and robust format for file tagging that isn't burdened by the limitations of traditional tagging and file metadata systems. TagStudio is the first proof-of-concept implementation of this system.</p> <ul> <li> See the Roadmap for future features and updates</li> </ul>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#955-september-8th-2025","title":"9.5.5 [September 8<sup>th</sup>, 2025]","text":""},{"location":"changelog/#added","title":"Added","text":""},{"location":"changelog/#new-settings","title":"New Settings","text":"<ul> <li>feat(ui): add thumbnail cache size setting to settings panel by @CyanVoxel in #1088</li> <li>feat: add cached thumbnail quality and resolution settings by @CyanVoxel in #1101<ul> <li>Only available by editing the <code>cached_thumb_quality</code> and <code>cached_thumb_resolution</code> options in the <code>settings.toml</code> config file</li> </ul> </li> <li>fix: add option to use old Windows 'start' command by @CyanVoxel in #1084<ul> <li>Only available by editing the <code>windows_start_command</code> option in the <code>settings.toml</code> file</li> <li>Fixes niche issue on Windows systems, see #1036</li> </ul> </li> <li>translations: add Czech, Portuguese (Portugal), and Romanian to settings panel (2db8bed)</li> </ul>"},{"location":"changelog/#file-previews","title":"File Previews","text":"<ul> <li>feat: render .cbr thumbnails by @Sola-ris in #1112</li> <li>feat: render .cbt thumbnails by @Sola-ris in #1116</li> </ul>"},{"location":"changelog/#fixed","title":"Fixed","text":"<ul> <li>fix: JSON migration window getting stuck on finishing migration by @CyanVoxel in #1094</li> <li>fix: VTF files not rendering on Linux by @CyanVoxel in #1093</li> <li>fix: account for leading slash ignore pattern by @CyanVoxel in #1092</li> <li>fix: add option to use old Windows 'start' command by @CyanVoxel in #1084</li> <li>fix: always show first frame of video; autoplay will always play by @SumithSudheer and @CyanVoxel in #1104</li> <li>feat: read epub cover from ComicInfo.xml, if available. by @Sola-ris in #1109 and #1111</li> <li>fix: prevent mnemonic removal from removing escaped ampersands by @CyanVoxel in #1110</li> <li>fix: properly delete tag_parents row when deleting tag by @CyanVoxel in #1107</li> </ul>"},{"location":"changelog/#changed","title":"Changed","text":""},{"location":"changelog/#translations","title":"Translations","text":"<ul> <li>French updated by @kitsumed , @RustyNova016</li> <li>Hungarian updated by @smileyhead</li> <li>Russian updated by @purpletennisball</li> <li>Spanish updated by @danpg94</li> <li>Toki Pona updated by @Math-Bee</li> </ul>"},{"location":"changelog/#internal-changes","title":"Internal Changes","text":"<ul> <li>refactor: untangle backend and frontend files by @CyanVoxel in #1095</li> <li>refactor: fix most pyright issues in <code>library/alchemy/</code> by @CyanVoxel in #1103</li> </ul>"},{"location":"changelog/#954-september-1st-2025","title":"9.5.4 [September 1<sup>st</sup>, 2025]","text":""},{"location":"changelog/#added_1","title":"Added","text":""},{"location":"changelog/#ts_ignore-file-and-folder-ignore-system","title":"<code>.ts_ignore</code> File and Folder Ignore System","text":"<p>The previous system for ignoring file extensions has been replaced by a new <code>.gitignore</code>-style pattern matching system. This uses a <code>.ts_ignore</code> file inside your library's <code>.TagStudio</code> folder with glob-like rules to give more power options than what was previously possible. This file can be edited inside within TagStudio or externally, and rules are hot-reloaded in either case. Existing extension rules have been migrated as closely as possible to this new system. For more information on this new system, visit the \"Ignore Files\" page on the documentation site.</p> <p></p> <p>Along with this system also comes the additional features:</p> <ul> <li>TagStudio can now traverse symlinks in your library folders</li> <li>TagStudio can now leverage ripgrep, a rust-based directory search tool, for faster library refreshing<ul> <li>ripgrep must be installed on your system and able to be located by TagStudio</li> </ul> </li> </ul>"},{"location":"changelog/#pull-requests","title":"Pull Requests:","text":"<ul> <li>feat: add <code>.ts_ignore</code> pattern ignoring system by @CyanVoxel in #897</li> <li>feat: replace extension exclusion system with <code>.ts_ignore</code> by @CyanVoxel in #1046</li> </ul>"},{"location":"changelog/#library-information-window","title":"Library Information Window","text":"<p>A new \"Library Information\" window has been added and is accessible under the \"View\" window. This window includes statistics about your currently opened library, as well as convenient access to library cleanup tools. This includes a new tool to cleanup \"ignored files\", which are files that have been previously added to your library but now no longer meet the ignore pattern rules.</p> <p></p>"},{"location":"changelog/#pull-requests_1","title":"Pull Requests:","text":"<ul> <li>feat: add LibraryInfoWindow with library statistics by @CyanVoxel in #1056</li> <li>feat: add library cleanup screen and 'fix ignored files' window by @CyanVoxel in #1070</li> </ul>"},{"location":"changelog/#other-additions","title":"Other Additions","text":"<ul> <li>feat: add random sorting by @TheBobBobs in #1029</li> <li>feat: add exr thumbnail support by @CyanVoxel in #1035</li> <li>feat: add thumbnail generation toggle by @ZwodahS in #1057</li> <li>feat: cli version argument by @HeikoWasTaken in #1060</li> <li>feat: add setting to select splash screen by @CyanVoxel in #1077<ul> <li>Includes a new \"'95\" splash screen originally intended for the 9.5.0 release</li> </ul> </li> </ul>"},{"location":"changelog/#fixed_1","title":"Fixed","text":"<ul> <li>fix: searching with internal tag ids ignores sorting order by @CyanVoxel in #1038</li> <li>fix: folders with names of unlinked entries are linked by @purpletennisball in #1027</li> <li>fix: parent tags in tag editor are uneditable by @purpletennisball in #1073</li> <li>feat: auto mnemonics by @Computerdores in #1082 and #1083</li> </ul>"},{"location":"changelog/#changed_1","title":"Changed","text":""},{"location":"changelog/#performance","title":"Performance","text":"<ul> <li>perf: optimize sql for or queries by @TheBobBobs in #948</li> <li>perf: Optimize db queries for preview panel by @TheBobBobs in #942</li> <li>fix: add tags to selected entries in bulk not individually by @Computerdores in #1028</li> </ul>"},{"location":"changelog/#translations_1","title":"Translations","text":"<ul> <li>Chinese (Traditional Han Script) by @tkiuvvv233</li> <li>French updated by @Bamowen, @kitsumed</li> <li>German updated by @Livesi5e</li> <li>Hungarian updated by @smileyhead</li> <li>Japanese updated by wany-oh</li> <li>Polish updated by @FeatherPrince</li> <li>Portuguese updated by @SantosSi</li> <li>Romanian updated by @VLTNOgithub</li> <li>Russian updated by @Dott-rus</li> <li>Spanish updated by @JCC1998</li> <li>Swedish updated by konto</li> </ul>"},{"location":"changelog/#internal-changes_1","title":"Internal Changes","text":"<ul> <li>feat: swap IDs in tag_parents table by @HeikoWasTaken in #998<ul> <li>fix: swap parent and child logic for TAG_CHILDREN_QUERY by @CyanVoxel in #1064</li> </ul> </li> <li>fix(nix): fixup and rework, always use nixpkgs PySide/Qt by @xarvex in #1048</li> <li>refactor: make cache_manager thread safe by @TheBobBobs in #1039</li> <li>ci(tests): fix broken tests and add type hints by @CyanVoxel in #1062</li> <li>refactor: store DB version inside <code>versions</code> table by @CyanVoxel in #1058</li> <li>refactor: unwrap instead of assert not None by @Computerdores in #1068</li> <li>chore(thumb_renderer): prepare for pillow_heif removing AVIF support by @xarvex in #1065</li> </ul>"},{"location":"changelog/#953-august-7th-2025","title":"9.5.3 [August 7<sup>th</sup>, 2025]","text":""},{"location":"changelog/#added_2","title":"Added","text":"<ul> <li>Datetime fields by @Computerdores in #921, #946, and #926</li> <li>Add date_format and hour_format settings by @JCC1998 in #904</li> <li>Invert selection by @zfbx in #909</li> <li>Show stems for extension-less files by @CyanVoxel in #899</li> <li>Press enter when adding fields by @rsazra in #941</li> <li>Option to change tag click behavior by @Computerdores in #945</li> <li>Krita/Open Raster thumbnails by @mashed5894 in #985</li> <li>Zoom keyboard shortcuts by @purpletennisball in #956</li> <li>Clickable links in text fields by @TrigamDev in #924</li> </ul>"},{"location":"changelog/#fixed_2","title":"Fixed","text":"<ul> <li>Restore page navigation state by @Computerdores in #933</li> <li>Proper error on unterminated quoted string by @Computerdores in #936</li> <li>Creating new tag now refreshes the menu using the current search text by @purpletennisball in #939</li> <li>Preview thumbnails don't scale as large as they could by @Computerdores in #1005</li> <li>Add Nix path to FFmpeg locations on macOS by @thibmaek in #990</li> <li>Use srctools instead of vtf2img to render vtf files by @CyanVoxel in #1014</li> </ul>"},{"location":"changelog/#changed_2","title":"Changed","text":"<ul> <li>Add parent tags to <code>folders_to_tags</code> macro and start tagging at root folder by @rsazra in #940</li> <li>Optimize page loading by @TheBobBobs in #954</li> <li>Add arrow icons for navigation buttons by @CyanVoxel in #1016</li> <li>Tweak media player style and behavior by @CyanVoxel in #1025</li> </ul>"},{"location":"changelog/#translations_2","title":"Translations","text":"<ul> <li>Chinese (Simplified Han Script) added and updated by @tkiuvvv233, Luoyu, @ngivanyh</li> <li>Dutch updated by @Pheubel</li> <li>Filipino updated by @searinminecraft</li> <li>French updated by @kitsumed</li> <li>German updated by @Livesi5e, @Stereo157E</li> <li>Hungarian updated by @smileyhead</li> <li>Japanese updated by wany-oh</li> <li>Norwegian Bokm\u00e5l updated by @Neemek</li> <li>Polish updated by @FeatherPrince</li> <li>Russian updated by @Dott-rus, Utof, @maximmax42</li> <li>Spanish updated by @JCC1998, Joan, Sunny, @danpg94</li> <li>Tamil updated by @TamilNeram</li> <li>Toki Pona updated by @Math-Bee</li> <li>Viossa updated by @Nginearing</li> </ul>"},{"location":"changelog/#internal-changes_2","title":"Internal Changes","text":"<ul> <li>refactor: type fixes and minor improvements to preview_thumb.py by @VasigaranAndAngel in #906</li> <li>fix(test): Fix tests to pass on windows without disrupting other platforms by @zfbx in #903</li> <li>chore(pyproject): version bumping/relaxing by @xarvex in #886</li> <li>fix: tests were overwriting the settings.toml by @Computerdores in #928</li> <li>fix(nix/package): override PySide6 if later version is being used by @xarvex in #917</li> <li>refactor: split QtDriver into View and Controller to follow MVC model by @Computerdores in #935</li> <li>refactor: resource_manager.py by @VasigaranAndAngel in #958</li> <li>Type fixes to folders_to_tags.py, collage_icon.py and item_thumb.py by @VasigaranAndAngel in #959</li> <li>Type fixes to preview_panel.py, progress.py, tag.py and tag_box.py by @VasigaranAndAngel in #961</li> <li>Type improvements to landing.py and panel.py by @VasigaranAndAngel in #960</li> <li>refactor(preview_panel): mvc split by @Computerdores in #952</li> <li>refactor(preview_thumb): mvc split by @Computerdores in #978</li> <li>refactor: type improvements for main_window.py by @VasigaranAndAngel in #957</li> <li>fix(library): get_tag_by_name by @Computerdores in #1006</li> <li>fix: ensure initial browsing state uses UI values by @CyanVoxel in #1008</li> <li>refactor(tag_box): mvc split by @Computerdores in #1003</li> <li>fix(ui): hide empty ProgressWidget cancel button by @CyanVoxel in #1011</li> <li>fix(ui): fix audio waveform generation on numpy 2.3 by @CyanVoxel in #1013</li> <li>refactor: replace remaining instances of logging with structlog by @CyanVoxel in #1012</li> <li>fix: don't fail when posix env var is not present by @Computerdores in #1018</li> <li>fix(ui): show correct thumb labels by @CyanVoxel in #1010</li> </ul>"},{"location":"changelog/#documentation","title":"Documentation","text":"<ul> <li>Update CHANGELOG.md by @Math-Bee in #914</li> <li>Add QT MVC structure to style guide by @Computerdores in #950</li> <li>Fix wrong date on Changelog by @ugurozturk in #966</li> </ul>"},{"location":"changelog/#952-march-31st-2025","title":"9.5.2 [March 31<sup>st</sup>, 2025]","text":""},{"location":"changelog/#added_3","title":"Added","text":""},{"location":"changelog/#search","title":"Search","text":"<ul> <li>feat(ui): add setting to not display full filepaths by @HermanKassler in #841</li> <li>feat: add filename and path sorting by @Computerdores in #842</li> </ul>"},{"location":"changelog/#settings","title":"Settings","text":"<ul> <li>feat: new settings menu + settings backend by @Computerdores in #859</li> </ul>"},{"location":"changelog/#ui","title":"UI","text":"<ul> <li>feat(ui): merge media controls by @csponge in #805<ul> <li>fix: Remove border from video preview top and left by @zfbx in #900</li> </ul> </li> <li>feat(ui): add more default icons and file type equivalencies by @CyanVoxel in #882</li> <li>ui: recent libraries list improvements by @CyanVoxel in #881</li> </ul>"},{"location":"changelog/#misc","title":"Misc","text":"<ul> <li>feat: provide a .desktop file by @xarvex in #870</li> </ul>"},{"location":"changelog/#fixed_3","title":"Fixed","text":"<ul> <li>fix: catch NotImplementedError for Float16 JPEG-XL files by @CyanVoxel in #849</li> <li>fix(nix/package): account for GTK platform by @xarvex in #868</li> <li>fix: do not set palette for Linux-like systems that offer theming by @xarvex in #869</li> <li>fix(flake): remove pinned input, only consume in Nix shell by @xarvex in #872</li> <li>fix: stop ffmpeg cmd windows, refactor ffmpeg_checker by @CyanVoxel in #855</li> <li>fix: hide mnemonics on macOS by @CyanVoxel in #856</li> <li>fix: use UNION instead of UNION ALL by @CyanVoxel in #877</li> <li>fix: remove unescaped ampersand from \"about.description\" by @CyanVoxel in #885</li> <li>fix(ui): display 0 frame webp files in preview panel by @CyanVoxel in 64dc88a</li> <li>fix: close pdf file object in thumb renderer by @Computerdores in #893</li> <li>perf: improve responsiveness of GIF entries by @Computerdores in #894</li> <li>fix(ui): seamlessly loop videos by @CyanVoxel in #902</li> </ul>"},{"location":"changelog/#internal-changes_3","title":"Internal Changes","text":"<ul> <li>refactor!: change layout; import and build change by @xarvex and @CyanVoxel in #844</li> <li>fix: log all problems in translation test by @Computerdores in #839</li> <li>refactor: split translation keys for about screen by @CyanVoxel in #845</li> <li>feat(ci): development tooling refresh and split documentation by @xarvex in #867</li> <li>refactor: type hints and improvements in file_opener.py by @VasigaranAndAngel in #876</li> <li>build: update spec file to use proper pathex and datas paths by @Leonard2 in #895</li> <li>refactor: fix various missing and broken type hints@VasigaranAndAngel in #901</li> <li>refactor: fix type hints and overrides in flowlayout.py by @VasigaranAndAngel in #880</li> </ul>"},{"location":"changelog/#documentation_1","title":"Documentation","text":"<ul> <li>docs: fix typos and grammar by @Gawidev in #879</li> <li>docs: update <code>ThumbRenderer</code> source by @emmanuel-ferdman in #896</li> </ul>"},{"location":"changelog/#translations_3","title":"Translations","text":"<ul> <li>Filipino updated by @searinminecraft</li> <li>French updated by @kitsumed</li> <li>German updated by @DontBlameMe99, @Computerdores</li> <li>Hungarian updated by Sz\u00edj\u00e1rt\u00f3 Levente P\u00e1l</li> <li>Japanese added by @needledetector</li> <li>Portuguese (Brazil) updated by @viniciushelder</li> <li>Russian updated by werdi, @Dott-rus</li> <li>Spanish updated by Joan, @Nginearing</li> <li>Tamil updated by @TamilNeram</li> <li>Toki Pona updated by @Math-Bee</li> <li>Turkish updated by @Nyghl</li> </ul>"},{"location":"changelog/#951-march-6th-2025","title":"9.5.1 [March 6<sup>th</sup>, 2025]","text":""},{"location":"changelog/#fixed_4","title":"Fixed","text":"<ul> <li>Fixed translations crashing the program and preventing it from being reopened (#827)<ul> <li>fix: restore <code>translate_formatted()</code> method as <code>format()</code> by @CyanVoxel in #830</li> <li>tests: add tests for translations by @Computerdores in #833</li> <li>fix(translations): fix invalid placeholders by @CyanVoxel in #835</li> </ul> </li> <li>Removed empty parentheses from the \"About\" screen title<ul> <li>fix: separate about screen title from translations by @CyanVoxel in #836</li> </ul> </li> </ul>"},{"location":"changelog/#translations_4","title":"Translations","text":"<ul> <li>French updated by @alessdangelo, @Bamowen, @kitsumed</li> <li>German updated by @Thesacraft</li> <li>Portuguese (Brazil) updated by @viniciushelder</li> <li>Russian updated by werdei</li> <li>Spanish updated by @JCC1998</li> </ul>"},{"location":"changelog/#documentation_2","title":"Documentation","text":"<ul> <li>docs: fix category typo by @salem404 in #834</li> </ul>"},{"location":"changelog/#950-march-3rd-2025","title":"9.5.0 [March 3<sup>rd</sup>, 2025]","text":""},{"location":"changelog/#added_4","title":"Added","text":""},{"location":"changelog/#overhauled-search-engine","title":"Overhauled Search Engine","text":""},{"location":"changelog/#boolean-operators","title":"Boolean Operators","text":"<ul> <li>feat: implement query language by @Computerdores in #606</li> <li>feat: optimize AND queries by @Computerdores in #679</li> </ul>"},{"location":"changelog/#filetype-mediatype-and-glob-path-smartcase-searches","title":"Filetype, Mediatype, and Glob Path + Smartcase Searches","text":"<ul> <li>fix: remove wildcard requirement for tags by @Tyrannicodin in #481</li> <li>feat: add filetype and mediatype searches by @python357-1 in #575</li> <li>feat: make path search use globs by @python357-1 in #582</li> <li>feat: implement search equivalence of \"jpg\" and \"jpeg\" filetypes by @Computerdores in #649</li> <li>feat: add smartcase and globless path searches by @CyanVoxel in #743</li> </ul>"},{"location":"changelog/#sortable-results","title":"Sortable Results","text":"<ul> <li>feat: sort by \"date added\" in library by @Computerdores in #674</li> </ul>"},{"location":"changelog/#autocomplete","title":"Autocomplete","text":"<ul> <li>feat: add autocomplete for search engine by @python357-1 in #586</li> </ul>"},{"location":"changelog/#replaced-tag-fields-with-tag-categories","title":"Replaced \"Tag Fields\" with Tag Categories","text":"<p>Instead of tags needing to be added to a tag field type such as \"Meta Tags\", \"Content Tags\", or just the \"Tags\" field, tags are now added directly to file entries with no intermediary step. While tag field types offered a way to further organize tags, it was cumbersome, inflexible, and simply not fully fleshed out. Tag Categories offer all of the previous (intentional) functionality while greatly increasing the ease of use and customization.</p> <ul> <li> <p>feat!: tag categories by @CyanVoxel in #655</p> <p></p> </li> </ul>"},{"location":"changelog/#thumbnails-and-file-previews","title":"Thumbnails and File Previews","text":""},{"location":"changelog/#new-thumbnail-support","title":"New Thumbnail Support","text":"<ul> <li>feat: add svg thumbnail support (port #442) by @Tyrannicodin and @CyanVoxel in #540</li> <li>feat: add pdf thumbnail support (port #378) by @Heiholf and @CyanVoxel in #543</li> <li>feat: add ePub thumbnail support (port #387) by @Heiholf and @CyanVoxel in #539</li> <li>feat: add OpenDocument thumbnail support (port #366) by @Joshua-Beatty and @CyanVoxel in #545</li> <li>feat: add JXL thumbnail and animated APNG + WEBP support (port #344 and partially port #357) by @BPplays and @CyanVoxel in #549<ul> <li>fix: catch ImportError for pillow_jxl module by @CyanVoxel in a2f9685</li> </ul> </li> </ul>"},{"location":"changelog/#audio-playback","title":"Audio Playback","text":"<ul> <li>feat: audio playback by @csponge in #576<ul> <li>feat(ui): add audio volume slider by @SkeleyM in #691</li> </ul> </li> </ul>"},{"location":"changelog/#thumbnail-caching","title":"Thumbnail Caching","text":"<ul> <li>feat(ui): add thumbnail caching by @CyanVoxel in #694</li> </ul>"},{"location":"changelog/#tags","title":"Tags","text":""},{"location":"changelog/#delete-tags-finally","title":"Delete Tags (Finally!)","text":"<ul> <li>feat: remove and create tags from tag database panel by @DandyDev01 in #569</li> </ul>"},{"location":"changelog/#custom-user-created-tag-colors","title":"Custom User-Created Tag Colors","text":"<p>Create your own custom tag colors via the new Tag Color Manager! Tag colors are assigned a namespace (group) and include a name, primary color, and optional secondary color. By default the secondary color is used for the tag text color, but this can also be toggled to apply to the border color as well!</p> <ul> <li> <p>feat(ui)!: user-created tag colors@CyanVoxel in #801</p> <p> </p> </li> </ul>"},{"location":"changelog/#new-tag-colors-ui","title":"New Tag Colors + UI","text":"<ul> <li>feat: expanded tag color system by @CyanVoxel in #709</li> <li>fix(ui): use correct pink tag color by @CyanVoxel in 431efe4</li> <li>fix(ui): use consistent tag outline colors by @CyanVoxel in 020a73d</li> </ul>"},{"location":"changelog/#new-tag-alias-ui","title":"New Tag Alias UI","text":"<ul> <li>fix: preview panel aliases not staying up to date with database by @DandyDev01 in #641</li> <li>fix: subtags/parent tags &amp; aliases update the UI for building a tag by @DandyDev01 in #534</li> </ul>"},{"location":"changelog/#translations_5","title":"Translations","text":"<p>TagStudio now has official translation support! Head to the new settings panel and select from one of the initial languages included. Note that many languages currently have incomplete translations.</p> <p>Translation hosting generously provided by Weblate. Check out our project page to help translate TagStudio! Thank you to everyone who's helped contribute to the translations so far!</p> <ul> <li>translations: add string tokens for en.json by @Bamowen in #507</li> <li>feat: translations by @Computerdores in #662</li> <li>feat(ui): add language setting by @CyanVoxel in #803</li> </ul> <p>Initial Languages:</p> <ul> <li>Chinese (Traditional Han Script) by @brisu</li> <li>Dutch by @Pheubel</li> <li>Filipino by @searinminecraft</li> <li>French by @Bamowen, @alessdangelo, @kitsumed, Obscaeris</li> <li>German by @Ryussei, @Computerdores, Aaron M, @JoeJoeTV, @Kurty00</li> <li>Hungarian by @smileyhead</li> <li>Norwegian Bokm\u00e5l by @comradekingu</li> <li>Polish by Anonymous</li> <li>Portuguese (Brazil) by @LoboMetalurgico, @SpaceFox1, @DaviMarquezeli, @viniciushelder, Alexander Lennart Formiga Johnsson</li> <li>Russian by @The-Stolas</li> <li>Spanish by @gallegonovato, @Nginearing, @noceno</li> <li>Swedish by @adampawelec, @mashed5894</li> <li>Tamil by @VasigaranAndAngel</li> <li>Toki Pona by @goldstargloww</li> <li>Turkish by @Nyghl</li> </ul>"},{"location":"changelog/#miscellaneous","title":"Miscellaneous","text":"<ul> <li>feat: about section by @mashed5894 in #712</li> <li>feat(ui): add configurable splash screens by @CyanVoxel in #703</li> <li>feat(ui): show filenames in thumbnail grid by @CyanVoxel in #633</li> <li>feat(about): clickable links to docs/discord/etc in about modal by @SkeleyM in #799</li> </ul>"},{"location":"changelog/#fixed_5","title":"Fixed","text":"<ul> <li>fix(ui): display all tags in panel during empty search by @samuellieberman in #328</li> <li>fix: avoid <code>KeyError</code> in <code>add_folders_to_tree()</code> (fix #346) by @CyanVoxel in #347</li> <li>fix: error on closing library by @yedpodtrzitko in #484</li> <li>fix: resolution info #550 by @Roc25 in #551</li> <li>fix: remove queued thumnail jobs when closing library by @yedpodtrzitko in #583</li> <li>fix: use absolute ffprobe path on macos (Fix #511) by @CyanVoxel in #629</li> <li>fix(ui): prevent duplicate parent tags in UI by @SkeleyM in #665</li> <li>fix: fix -o flag not working if path has whitespace around it by @python357-1 in #670</li> <li>fix: better file opening compatibility with non-ascii filenames by @SkeleyM in #667</li> <li>fix: restore environment before launching external programs by @mashed5894 in #707</li> <li>fix: have pydub use known ffmpeg + ffprobe locations by @CyanVoxel in #724</li> <li>fix: add \".DS_Store\" to <code>GLOBAL_IGNORE_SET</code> by @CyanVoxel in b72a2f2</li> <li>fix: don't add \"._\" files to libraries by @CyanVoxel in eb1f634</li> </ul>"},{"location":"changelog/#changed_3","title":"Changed","text":""},{"location":"changelog/#sqlite-save-file-format","title":"SQLite Save File Format","text":"<p>This was the main focus of this update, and where the majority of development time and resources have been spent since v9.4. These changes include everything that was done to migrate from the JSON format to SQLite starting from the initial SQLite PR, while re-implementing every feature from v9.4 as the initial SQLite PR was based on v9.3.x at the time.</p> <ul> <li>refactor!: use SQLite and SQLAlchemy for database backend by @yedpodtrzitko in #332</li> <li>feat: make search results more ergonomic by @yedpodtrzitko in #498</li> <li>feat: store <code>Entry</code> suffix separately by @yedpodtrzitko in #503</li> <li>feat: port thumbnail (#390) and related features to v9.5 by @CyanVoxel in #522</li> <li>fix: don't check db version with new library by @yedpodtrzitko in #536</li> <li>fix(ui): update ui when removing fields by @DandyDev01 in #560</li> <li>feat(parity): backend for aliases and parent tags by @DandyDev01 in #596</li> <li>fix: \"open in explorer\" opens correct folder by @KirilBourakov in #603</li> <li>fix: ui/ux parity fixes for thumbnails and files by @CyanVoxel in #608</li> <li>feat(parity): migrate json libraries to sqlite by @CyanVoxel in #604</li> <li>fix: clear all setting values when opening a library by @VasigaranAndAngel in #622</li> <li>fix: remove/rework windows path tests by @VasigaranAndAngel in #625</li> <li>fix: add check to see if library is loaded in filter_items by @Roc25 in #547</li> <li>fix: multiple macro errors by @Computerdores in #612</li> <li>fix: don't allow blank tag alias values in db by @CyanVoxel in #628</li> <li>feat: Reimplement drag drop files on sql migration by @seakrueger in #528</li> <li>fix: stop sqlite db from being updated while running tests by @python357-1 in #648</li> <li>fix: enter/return adds top result tag by @SkeleyM in #651</li> <li>fix: show correct unlinked files count by @SkeleyM in #653</li> <li>feat: implement parent tag search by @Computerdores in #673</li> <li>fix: only close add tag menu with no search by @SkeleyM in #685</li> <li>fix: drag and drop no longer resets by @SkeleyM in #710</li> <li>feat(ui): port \"create and add tag\" to main branch by @SkeleyM in #711</li> <li>fix: don't add default title field, use proper phrasing for adding files by @CyanVoxel in #701</li> <li>fix: preview panel + main window fixes and optimizations by @CyanVoxel in #700</li> <li>fix: sort tag results by @mashed5894 in #721</li> <li>fix: restore opening last library on startup by @SkeleyM in #729</li> <li>fix(ui): don't always create tag on enter by @SkeleyM in #731</li> <li>fix: use tag aliases in tag search by @CyanVoxel in #726</li> <li>fix: keep initial id order in <code>get_entries_full()</code> by @CyanVoxel in #736</li> <li>fix: always catch db mismatch by @CyanVoxel in #738</li> <li>fix: relink unlinked entry to existing entry without sql error by @mashed5894 in #730</li> <li>fix: refactor and fix bugs with missing_files.py by @CyanVoxel in #739</li> <li>fix: dragging files references correct entry IDs @CyanVoxel in 44ff17c</li> <li>ui: port splash screen from Alpha-v9.4 by @CyanVoxel in af760ee</li> <li>fix: tags created from tag database now add aliases by @CyanVoxel in 2903dd2</li> <li>fix: check for tag name parity during JSON migration by @CyanVoxel in #748</li> <li>feat(ui): re-implement tag display names on sql by @CyanVoxel in #747</li> <li>fix(ui): restore Windows accent color on PySide 6.8.0.1 by @CyanVoxel in #755</li> <li>fix(ui): (mostly) fix right-click search option on tags by @CyanVoxel in #756</li> <li>feat: copy/paste fields and tags by @mashed5894 in #722</li> <li>perf: optimize query methods and reduce preview panel updates by @CyanVoxel in #794</li> <li>feat: port file trashing (#409) to v9.5 by @CyanVoxel in #792</li> <li>fix: prevent future library versions from being opened by @CyanVoxel in bcf3b2f</li> </ul>"},{"location":"changelog/#uiux","title":"UI/UX","text":"<ul> <li>feat(ui): pre-select default tag name in <code>BuildTagPanel</code> by @Cool-Game-Dev in #592</li> <li>feat(ui): keyboard navigation for editing tags by @Computerdores in #407</li> <li>feat(ui): use tag query as default new tag name by @CyanVoxel in 29c0dfd</li> <li>feat(ui): shortcut to add tags to selected entries; change click behavior of tags to edit by @CyanVoxel in #749</li> <li>fix(ui): use consistent dark mode colors for all systems by @CyanVoxel in #752</li> <li>fix(ui): use camera white balance for raw images by @CyanVoxel in 6ee5304</li> <li>Mixed field editing has been limited due to various bugs in both the JSON and SQL implementations. This will be re-implemented in a future release.</li> <li>fix(ui): improve tagging ux by @CyanVoxel in #633</li> <li>fix(ui): hide library actions when no library is open by @CyanVoxel in #787</li> <li>refactor(ui): recycle tag list in TagSearchPanel by @CyanVoxel in #788<ul> <li>feat(ui): add tag view limit dropdown</li> </ul> </li> <li>fix(ui): expand usage of esc and enter for modals by @CyanVoxel in #793</li> </ul>"},{"location":"changelog/#performance_1","title":"Performance","text":"<ul> <li>feat: improve performance of \"Delete Missing Entries\" by @Toby222 and @Computerdores in #696</li> </ul>"},{"location":"changelog/#internal-changes_4","title":"Internal Changes","text":"<ul> <li>refactor: combine open launch args by @UnusualEgg in #364</li> <li>feat: add date_created, date_modified, and date_added columns to entries table by @CyanVoxel in #740</li> </ul>"},{"location":"changelog/#950-pr4-february-17th-2025","title":"9.5.0-pr4 [February 17<sup>th</sup>, 2025]","text":""},{"location":"changelog/#added_5","title":"Added","text":""},{"location":"changelog/#custom-user-created-tag-colors-cyanvoxel-in-801","title":"Custom User-Created Tag Colors (@CyanVoxel in #801)","text":"<p>Create your own custom tag colors via the new Tag Color Manager! Tag colors are assigned a namespace (group) and include a name, primary color, and optional secondary color. By default the secondary color is used for the tag text color, but this can also be toggled to apply to the border color as well!</p> <p> </p>"},{"location":"changelog/#translations_6","title":"Translations","text":"<p>TagStudio now has official translation support! Head to the new settings panel and select from one of the initial languages included. Note that many languages currently have incomplete translations.</p> <p>Translation hosting generously provided by Weblate. Check out our project page to help translate TagStudio! Thank you to everyone who's helped contribute to the translations so far!</p> <ul> <li>translations: add string tokens for en.json by @Bamowen in #507</li> <li>feat: translations by @Computerdores in #662</li> <li>feat(ui): add language setting by @CyanVoxel in #803</li> </ul> <p>Initial Languages:</p> <ul> <li>Chinese (Traditional) (68%)<ul> <li>@brisu</li> </ul> </li> <li>Dutch (35%)<ul> <li>@Pheubel</li> </ul> </li> <li>Filipino (15%)<ul> <li>@searinminecraft</li> </ul> </li> <li>French (89%)<ul> <li>@Bamowen, @alessdangelo, @kitsumed, Obscaeris</li> </ul> </li> <li>German (73%)<ul> <li>@Ryussei, @Computerdores, Aaron M</li> </ul> </li> <li>Hungarian (89%)<ul> <li>@smileyhead</li> </ul> </li> <li>Norwegian Bokm\u00e5l (16%)<ul> <li>@comradekingu</li> </ul> </li> <li>Polish (76%)<ul> <li>Anonymous</li> </ul> </li> <li>Portuguese (Brazil) (22%)<ul> <li>@LoboMetalurgico, @SpaceFox1</li> </ul> </li> <li>Russian (22%)<ul> <li>@The-Stolas</li> </ul> </li> <li>Spanish (46%)<ul> <li>@gallegonovato, @Nginearing, @noceno</li> </ul> </li> <li>Swedish (24%)<ul> <li>@adampawelec, @mashed5894</li> </ul> </li> <li>Tamil (22%)<ul> <li>@VasigaranAndAngel</li> </ul> </li> <li>Toki Pona (32%)<ul> <li>@goldstargloww</li> </ul> </li> <li>Turkish (22%)<ul> <li>@Nyghl</li> </ul> </li> </ul>"},{"location":"changelog/#fixed_6","title":"Fixed","text":"<ul> <li>feat(about): clickable links to docs/discord/etc in about modal by @SkeleyM in #799</li> </ul>"},{"location":"changelog/#internal-changes_5","title":"Internal Changes","text":"<p>This release increases the internal <code>DB_VERSION</code> to 8. Libraries created with this version of TagStudio can still be opened in earlier v9.5.0 pre-release versions, however the behavior of custom color borders will not be identical to the behavior in this PR. Otherwise it should still be possible to use any custom colors created in this version in these earlier pre-releases (but not really recommended).</p>"},{"location":"changelog/#950-pr3-february-10th-2025","title":"9.5.0-pr3 [February 10<sup>th</sup>, 2025]","text":""},{"location":"changelog/#added_6","title":"Added","text":""},{"location":"changelog/#743-by-cyanvoxel","title":"#743 by @CyanVoxel","text":"<p>Added \"Smartcase\" and Globless Path Search</p> <ul> <li><code>path: temp</code>: Returns all paths that have \"temp\" (Case insensitive) somewhere in the name.</li> <li><code>path: Temp</code>: Returns all paths that have \"Temp\" (Case sensitive) somewhere in the name.</li> </ul> <p>Glob Patterns w/ Smartcase</p> <ul> <li><code>path: *temp*</code>: Returns all paths that have \"temp\" (Case insensitive) somewhere in the name.</li> <li><code>path: *Temp*</code>: Returns all paths that have \"Temp\" (Case sensitive) somewhere in the name.</li> <li><code>path: temp*</code>: Returns all paths that start with \"temp\" (Case insensitive) somewhere in the name.</li> <li><code>path: Temp*</code>: Returns all paths that start with \"Temp\" (Case sensitive) somewhere in the name.</li> <li><code>path: *temp</code>: Returns all paths that end with \"temp\" (Case insensitive) somewhere in the name.</li> <li><code>path: *TEmP</code>: Returns all paths that end with \"TEmP\" (Case sensitive) somewhere in the name.</li> </ul>"},{"location":"changelog/#788-by-cyanvoxel","title":"#788 by @CyanVoxel","text":"<ul> <li>Added a \"View Limit\" dropdown to tag search boxes to limit the number of on-screen tags. Previously this limit was hardcoded to 100, but now options range from 25 to unlimited. </li> </ul>"},{"location":"changelog/#changed_4","title":"Changed","text":"<ul> <li>fix(ui): expand usage of esc and enter for modals by @CyanVoxel in #793</li> <li>perf: optimize query methods and reduce preview panel updates by @CyanVoxel in #794</li> </ul>"},{"location":"changelog/#788-by-cyanvoxel_1","title":"#788 by @CyanVoxel","text":"<ul> <li>Improved performance of tag search boxes, including the tag manager</li> </ul>"},{"location":"changelog/#fixed_7","title":"Fixed","text":"<ul> <li>fix(ui): hide library actions when no library is open by @CyanVoxel in #787</li> <li>feat: port file trashing (#409) to v9.5 by @CyanVoxel in #792</li> </ul>"},{"location":"changelog/#docs","title":"Docs","text":"<ul> <li>Added references to alternative POSIX shells, as well as pyenv to CONTRIBUTING.md by @ChloeZamorano in #791</li> </ul>"},{"location":"changelog/#950-pr2-february-3rd-2025","title":"9.5.0-pr2 [February 3<sup>rd</sup>, 2025]","text":""},{"location":"changelog/#added_7","title":"Added","text":""},{"location":"changelog/#784-by-cyanvoxel","title":"#784 by @CyanVoxel","text":"<ul> <li>Add Ctrl+M shortcut to open the \"Tag Manager\"</li> </ul>"},{"location":"changelog/#fixed_8","title":"Fixed","text":"<ul> <li>fix: don't wrap field names too early by @CyanVoxel in 2215403 and 90a826d</li> <li>fix: save all tag attributes from \"Create &amp; Add\" modal by @SkeleyM in #762</li> <li>fix: allow tag names with colons in search by @SkeleyM in #765</li> <li>fix: catch <code>ParsingError</code> by @CyanVoxel in #779</li> <li>fix: patch incorrect description type &amp; invalid disambiguation_id refs by @CyanVoxel in #782</li> </ul>"},{"location":"changelog/#784-by-cyanvoxel_1","title":"#784 by @CyanVoxel","text":"<ul> <li>Reset tag search box and focus each time a tag search panel is opened</li> <li>Include tag parents in tag search results (v9.4 parity)</li> <li>Lowercase tag names now get properly sorted with uppercase ones</li> <li>Don't include tag display names in \"closeness\" factor when searching</li> <li>Escape \"&amp;\" characters inside tag names so Qt doesn't treat them as mnemonics</li> <li>Set minimum tag width</li> <li>Fix \"Add Tags\" panel missing its window title when accessing from the keyboard shortcut</li> </ul>"},{"location":"changelog/#changed_5","title":"Changed","text":""},{"location":"changelog/#784-by-cyanvoxel_2","title":"#784 by @CyanVoxel","text":"<ul> <li>The \"use for disambiguation\" button has been moved to the right-hand side of parent tags in order to prevent accidental clicks involving the left-hand \"remove tag\" button</li> <li>Add \"Create &amp; Add\" button to the bottom of all non-whitespace searches, even if they return some tags</li> <li>The awkward \"+\" button next to tags in the \"Add Tags\" panel has been removed in favor of clicking on tags themselves</li> <li>Improved visual feedback for highlighting, keyboard focusing, and clicking tags</li> <li>The clickable area of the \"-\" button on tags has been increased and has visual feedback when you hover and click it</li> <li>You can now tab into the tag search list and add tags with a spacebar press (previously possible but very janky)</li> <li>In tag search panels, pressing the Esc key will return your focus to the search bar and highlight your previous query. If the search box is already highlighted, pressing Esc will close the modal</li> <li>In modals such as the \"Add Tag\" and \"Edit Tag\" panels, pressing Esc will cancel the operation and close the modal</li> </ul>"},{"location":"changelog/#internal-changes_6","title":"Internal Changes","text":"<ul> <li>refactor: wrap migration_iterator lambda in a try/except block by @CyanVoxel in #773</li> </ul>"},{"location":"changelog/#docs_1","title":"Docs","text":"<ul> <li>docs: update field and library pages by @CyanVoxel in f5ff4d7</li> <li>docs: add information about \"tag manager\" by @CyanVoxel in 9bdbafa</li> <li>docs: add note about glob searching in the readme by @CyanVoxel in 6e402ac</li> <li>docs: add library_search page by @CyanVoxel in 5be7dfc</li> <li>docs: docs: add more links to index.md by @CyanVoxel in d795889</li> <li>docs: fix typo for \"category\" in usage.md by @pinheadtf2 in #760</li> <li>fix(docs): fix screenshot sometimes not rendering by @SkeleyM in #775</li> </ul>"},{"location":"changelog/#950-pr1-january-31st-2025","title":"9.5.0-pr1 [January 31<sup>st</sup>, 2025]","text":""},{"location":"changelog/#added_8","title":"Added","text":""},{"location":"changelog/#overhauled-search-engine_1","title":"Overhauled Search Engine","text":""},{"location":"changelog/#boolean-operators_1","title":"Boolean Operators","text":"<ul> <li>feat: implement query language by @Computerdores in #606</li> <li>feat: optimize AND queries by @Computerdores in #679</li> </ul>"},{"location":"changelog/#filetype-mediatype-and-glob-path-searches","title":"Filetype, Mediatype, and Glob Path Searches","text":"<ul> <li>fix: remove wildcard requirement for tags by @Tyrannicodin in #481</li> <li>feat: add filetype and mediatype searches by @python357-1 in #575</li> <li>feat: make path search use globs by @python357-1 in #582</li> <li>feat: implement search equivalence of \"jpg\" and \"jpeg\" filetypes by @Computerdores in #649</li> </ul>"},{"location":"changelog/#sortable-results_1","title":"Sortable Results","text":"<ul> <li>feat: sort by \"date added\" in library by @Computerdores in #674</li> </ul>"},{"location":"changelog/#autocomplete_1","title":"Autocomplete","text":"<ul> <li>feat: add autocomplete for search engine by @python357-1 in #586</li> </ul>"},{"location":"changelog/#replaced-tag-fields-with-tag-categories_1","title":"Replaced \"Tag Fields\" with Tag Categories","text":"<p>Instead of tags needing to be added to a tag field type such as \"Meta Tags\", \"Content Tags\", or just the \"Tags\" field, tags are now added directly to file entries with no intermediary step. While tag field types offered a way to further organize tags, it was cumbersome, inflexible, and simply not fully fleshed out. Tag Categories offer all of the previous (intentional) functionality while greatly increasing the ease of use and customization.</p> <ul> <li>feat!: tag categories by @CyanVoxel in #655</li> </ul>"},{"location":"changelog/#thumbnails-and-file-previews_1","title":"Thumbnails and File Previews","text":""},{"location":"changelog/#new-thumbnail-support_1","title":"New Thumbnail Support","text":"<ul> <li>feat: add svg thumbnail support (port #442) by @Tyrannicodin and @CyanVoxel in #540</li> <li>feat: add pdf thumbnail support (port #378) by @Heiholf and @CyanVoxel in #543</li> <li>feat: add ePub thumbnail support (port #387) by @Heiholf and @CyanVoxel in #539</li> <li>feat: add OpenDocument thumbnail support (port #366) by @Joshua-Beatty and @CyanVoxel in #545</li> <li>feat: add JXL thumbnail and animated APNG + WEBP support (port #344 and partially port #357) by @BPplays and @CyanVoxel in #549<ul> <li>fix: catch ImportError for pillow_jxl module by @CyanVoxel in a2f9685</li> </ul> </li> </ul>"},{"location":"changelog/#audio-playback_1","title":"Audio Playback","text":"<ul> <li>feat: audio playback by @csponge in #576<ul> <li>feat(ui): add audio volume slider by @SkeleyM in #691</li> </ul> </li> </ul>"},{"location":"changelog/#thumbnail-caching_1","title":"Thumbnail Caching","text":"<ul> <li>feat(ui): add thumbnail caching by @CyanVoxel in #694</li> </ul>"},{"location":"changelog/#tags_1","title":"Tags","text":""},{"location":"changelog/#delete-tags-finally_1","title":"Delete Tags (Finally!)","text":"<ul> <li>feat: remove and create tags from tag database panel by @DandyDev01 in #569</li> </ul>"},{"location":"changelog/#new-tag-colors-ui_1","title":"New Tag Colors + UI","text":"<ul> <li>feat: expanded tag color system by @CyanVoxel in #709</li> <li>fix(ui): use correct pink tag color by @CyanVoxel in 431efe4</li> <li>fix(ui): use consistent tag outline colors by @CyanVoxel in 020a73d</li> </ul>"},{"location":"changelog/#new-tag-alias-ui_1","title":"New Tag Alias UI","text":"<ul> <li>fix: preview panel aliases not staying up to date with database by @DandyDev01 in #641</li> <li>fix: subtags/parent tags &amp; aliases update the UI for building a tag by @DandyDev01 in #534</li> </ul>"},{"location":"changelog/#miscellaneous_1","title":"Miscellaneous","text":"<ul> <li>feat: about section by @mashed5894 in #712</li> <li>feat(ui): add configurable splash screens by @CyanVoxel in #703</li> <li>feat(ui): show filenames in thumbnail grid by @CyanVoxel in #633</li> </ul>"},{"location":"changelog/#fixed_9","title":"Fixed","text":"<ul> <li>fix(ui): display all tags in panel during empty search by @samuellieberman in #328</li> <li>fix: avoid <code>KeyError</code> in <code>add_folders_to_tree()</code> (fix #346) by @CyanVoxel in #347</li> <li>fix: error on closing library by @yedpodtrzitko in #484</li> <li>fix: resolution info #550 by @Roc25 in #551</li> <li>fix: remove queued thumnail jobs when closing library by @yedpodtrzitko in #583</li> <li>fix: use absolute ffprobe path on macos (Fix #511) by @CyanVoxel in #629</li> <li>fix(ui): prevent duplicate parent tags in UI by @SkeleyM in #665</li> <li>fix: fix -o flag not working if path has whitespace around it by @python357-1 in #670</li> <li>fix: better file opening compatibility with non-ascii filenames by @SkeleyM in #667</li> <li>fix: restore environment before launching external programs by @mashed5894 in #707</li> <li>fix: have pydub use known ffmpeg + ffprobe locations by @CyanVoxel in #724</li> <li>fix: add \".DS_Store\" to <code>GLOBAL_IGNORE_SET</code> by @CyanVoxel in b72a2f2</li> <li>fix: don't add \"._\" files to libraries by @CyanVoxel in eb1f634</li> </ul>"},{"location":"changelog/#changed_6","title":"Changed","text":""},{"location":"changelog/#sqlite-save-file-format_1","title":"SQLite Save File Format","text":"<p>This was the main focus of this update, and where the majority of development time and resources have been spent since v9.4. These changes include everything that was done to migrate from the JSON format to SQLite starting from the initial SQLite PR, while re-implementing every feature from v9.4 as the initial SQLite PR was based on v9.3.x at the time.</p> <ul> <li>refactor!: use SQLite and SQLAlchemy for database backend by @yedpodtrzitko in #332</li> <li>feat: make search results more ergonomic by @yedpodtrzitko in #498</li> <li>feat: store <code>Entry</code> suffix separately by @yedpodtrzitko in #503</li> <li>feat: port thumbnail (#390) and related features to v9.5 by @CyanVoxel in #522</li> <li>fix: don't check db version with new library by @yedpodtrzitko in #536</li> <li>fix(ui): update ui when removing fields by @DandyDev01 in #560</li> <li>feat(parity): backend for aliases and parent tags by @DandyDev01 in #596</li> <li>fix: \"open in explorer\" opens correct folder by @KirilBourakov in #603</li> <li>fix: ui/ux parity fixes for thumbnails and files by @CyanVoxel in #608</li> <li>feat(parity): migrate json libraries to sqlite by @CyanVoxel in #604</li> <li>fix: clear all setting values when opening a library by @VasigaranAndAngel in #622</li> <li>fix: remove/rework windows path tests by @VasigaranAndAngel in #625</li> <li>fix: add check to see if library is loaded in filter_items by @Roc25 in #547</li> <li>fix: multiple macro errors by @Computerdores in #612</li> <li>fix: don't allow blank tag alias values in db by @CyanVoxel in #628</li> <li>feat: Reimplement drag drop files on sql migration by @seakrueger in #528</li> <li>fix: stop sqlite db from being updated while running tests by @python357-1 in #648</li> <li>fix: enter/return adds top result tag by @SkeleyM in #651</li> <li>fix: show correct unlinked files count by @SkeleyM in #653</li> <li>feat: implement parent tag search by @Computerdores in #673</li> <li>fix: only close add tag menu with no search by @SkeleyM in #685</li> <li>fix: drag and drop no longer resets by @SkeleyM in #710</li> <li>feat(ui): port \"create and add tag\" to main branch by @SkeleyM in #711</li> <li>fix: don't add default title field, use proper phrasing for adding files by @CyanVoxel in #701</li> <li>fix: preview panel + main window fixes and optimizations by @CyanVoxel in #700</li> <li>fix: sort tag results by @mashed5894 in #721</li> <li>fix: restore opening last library on startup by @SkeleyM in #729</li> <li>fix(ui): don't always create tag on enter by @SkeleyM in #731</li> <li>fix: use tag aliases in tag search by @CyanVoxel in #726</li> <li>fix: keep initial id order in <code>get_entries_full()</code> by @CyanVoxel in #736</li> <li>fix: always catch db mismatch by @CyanVoxel in #738</li> <li>fix: relink unlinked entry to existing entry without sql error by @mashed5894 in #730</li> <li>fix: refactor and fix bugs with missing_files.py by @CyanVoxel in #739</li> <li>fix: dragging files references correct entry IDs @CyanVoxel in 44ff17c</li> <li>ui: port splash screen from Alpha-v9.4 by @CyanVoxel in af760ee</li> <li>fix: tags created from tag database now add aliases by @CyanVoxel in 2903dd2</li> <li>fix: check for tag name parity during JSON migration by @CyanVoxel in #748</li> <li>feat(ui): re-implement tag display names on sql by @CyanVoxel in #747</li> <li>fix(ui): restore Windows accent color on PySide 6.8.0.1 by @CyanVoxel in #755</li> <li>fix(ui): (mostly) fix right-click search option on tags by @CyanVoxel in #756</li> <li>feat: copy/paste fields and tags by @mashed5894 in #722</li> </ul>"},{"location":"changelog/#uiux_1","title":"UI/UX","text":"<ul> <li>feat(ui): pre-select default tag name in <code>BuildTagPanel</code> by @Cool-Game-Dev in #592</li> <li>feat(ui): keyboard navigation for editing tags by @Computerdores in #407</li> <li>feat(ui): use tag query as default new tag name by @CyanVoxel in 29c0dfd</li> <li>feat(ui): shortcut to add tags to selected entries; change click behavior of tags to edit by @CyanVoxel in #749</li> <li>fix(ui): use consistent dark mode colors for all systems by @CyanVoxel in #752</li> <li>fix(ui): use camera white balance for raw images by @CyanVoxel in 6ee5304</li> <li>Mixed field editing has been limited due to various bugs in both the JSON and SQL implementations. This will be re-implemented in a future release.</li> </ul>"},{"location":"changelog/#performance_2","title":"Performance","text":"<ul> <li>feat: improve performance of \"Delete Missing Entries\" by @Toby222 and @Computerdores in #696</li> </ul>"},{"location":"changelog/#internal-changes_7","title":"Internal Changes","text":"<ul> <li>refactor: combine open launch args by @UnusualEgg in #364</li> <li>feat: add date_created, date_modified, and date_added columns to entries table by @CyanVoxel in #740</li> </ul>"},{"location":"changelog/#942-december-1st-2024","title":"9.4.2 [December 1<sup>st</sup>, 2024]","text":""},{"location":"changelog/#addedfixed","title":"Added/Fixed","text":"<ul> <li>Create auto-backup of library for use in save failures (Fix #343) by @CyanVoxel in #554</li> </ul>"},{"location":"changelog/#941-september-13th-2024","title":"9.4.1 [September 13<sup>th</sup>, 2024]","text":""},{"location":"changelog/#added_9","title":"Added","text":"<ul> <li>Warn user if FFmpeg is not installed</li> <li>Support for <code>.raf</code> and <code>.orf</code> raw image thumbnails and previews</li> </ul>"},{"location":"changelog/#fixed_10","title":"Fixed","text":"<ul> <li>Use <code>birthtime</code> for file creation time on Mac &amp; Windows</li> <li>Use audio icon fallback when FFmpeg is not detected</li> <li>Retain search query upon directory refresh</li> </ul>"},{"location":"changelog/#changed_7","title":"Changed","text":"<ul> <li>Significantly improve file re-scanning performance</li> </ul>"},{"location":"changelog/#940-september-3rd-2024","title":"9.4.0 [September 3<sup>rd</sup>, 2024]","text":""},{"location":"changelog/#added_10","title":"Added","text":"<ul> <li>Copy and paste fields</li> <li>Add multiple fields at once</li> <li>Drag and drop files in/out of the program<ul> <li>Files can be shared by dragging them from the thumbnail grid to other programs</li> <li>Files can be added to library folder by dragging them into the program</li> </ul> </li> <li>Manage Python virtual environment in Nix flake</li> <li>Ability to create tag when adding tags</li> <li>Blender preview thumbnail support</li> <li>File deletion/trashing<ul> <li>Added right-click option on thumbnails and preview panel to delete files</li> <li>Added Edit Menu option for deleting files</li> <li>Added Delete key shortcut for deleting files</li> </ul> </li> <li>Font preview thumbnail support<ul> <li>Short \"Aa\" previews for thumbnails</li> <li>Full alphabet preview for the preview pane</li> </ul> </li> <li>Sort tags by alphabetical/color</li> <li>File explorer action follows OS naming</li> <li>Preview Source Engine files</li> <li>Expanded thumbnail and preview features<ul> <li>Add album cover art thumbnails</li> <li>Add audio waveform thumbnails for audio files without embedded cover art</li> <li>Add new default file thumbnails, both for generic and specific file types</li> <li>Change the unlinked file icon to better convey its meaning</li> <li>Add dropdown for different thumbnail sizes</li> </ul> </li> <li>Show File Creation and Modified dates; Restyle file path label</li> </ul>"},{"location":"changelog/#fixed_11","title":"Fixed","text":"<ul> <li>Backslashes in f-string on file dupe widget</li> <li>Tags not shown when none searched</li> <li>Avoid error from eagerly grabbing data values</li> <li>Correct behavior for tag search options</li> <li>Load Gallery-DL sidecar files correctly</li> <li>Correct duplicate file matching</li> <li>GPU hardware acceleration in Nix flake</li> <li>Suppress command prompt windows for FFmpeg in builds</li> </ul>"},{"location":"changelog/#internal-changes_8","title":"Internal Changes","text":"<ul> <li>Move type constants to media classes</li> <li>Combine open launch arguments</li> <li>Revamp Nix flake with devenv/direnv in cb4798b</li> <li>Remove impurity of Nix flake when used with direnv in bc38e56</li> </ul>"},{"location":"changelog/#932-july-18th-2024","title":"9.3.2 [July 18<sup>th</sup>, 2024]","text":""},{"location":"changelog/#fixed_12","title":"Fixed","text":"<ul> <li>Fix signal log warning</li> <li>Fix \"Folders to Tags\" feature</li> <li>Fix search ignoring case of extension list</li> </ul>"},{"location":"changelog/#internal-changes_9","title":"Internal Changes","text":"<ul> <li>Add tests into CI by</li> <li>Create testing library files ad-hoc</li> <li>Refactoring: centralize field IDs</li> <li>Update to pyside6 version 6.7.1</li> </ul>"},{"location":"changelog/#931-june-13th-2024","title":"9.3.1 [June 13<sup>th</sup>, 2024]","text":""},{"location":"changelog/#fixed_13","title":"Fixed","text":"<ul> <li>Separately pin QT nixpkg version</li> <li>Bugfix for #252, don't attempt to read video file if invalid or 0 frames long</li> <li>Toggle Mouse Event Transparency on ItemThumbs</li> <li>Refactor <code>video_player.py</code></li> </ul>"},{"location":"changelog/#930-june-8th-2024","title":"9.3.0 [June 8<sup>th</sup>, 2024]","text":""},{"location":"changelog/#added_11","title":"Added","text":"<ul> <li>Added playback previews for video files</li> <li>Added Boolean \"and/or\" search mode selection</li> <li>Added ability to scan and fix duplicate entries (not to be confused with duplicate files) from the \"Fix Unlinked Entries\" menu</li> <li>Added \u201cSelect All\u201d (Ctrl+A / \u2318 Command+A) hotkey for the library grid view</li> <li>Added \"Clear Selection\" hotkey (Esc) for the library grid view</li> <li>Added the ability to invert the file extension inclusion list into an exclusion list</li> <li>Added default landing page when no library is open</li> </ul>"},{"location":"changelog/#fixed_14","title":"Fixed","text":"<ul> <li>TagStudio will no longer attempt to or allow you to reopen a library from a missing location</li> <li>Fixed <code>PermissionError</code> when attempting to access files with a higher permission level upon scanning the library directory</li> <li>Fixed RAW image previews sometimes not loadingand</li> <li>Fixed most non-UTF-8 encoded text files from not being able to be previewed</li> <li>Fixed \"Refresh Directories\"/\"Fix Unlinked Entries\" creating duplicate entries</li> <li>Other miscellaneous fixes</li> </ul>"},{"location":"changelog/#changed_8","title":"Changed","text":"<ul> <li>Renamed \"Subtags\" to \"Parent Tags\" to help better describe their function</li> <li>Increased number of tags shown by default in the \"Add Tag\" modal from 29 to 100</li> <li>Documentation is now split into individual linked files and updated to include future features</li> <li>Replaced use of <code>os.path</code> with <code>pathlib</code></li> <li><code>.cr2</code> files are now included in the list of RAW image file types</li> <li>Minimum supported macOS version raised to 12.0</li> </ul>"},{"location":"changelog/#921-may-23rd-2024","title":"9.2.1 [May 23<sup>rd</sup>, 2024]","text":""},{"location":"changelog/#added_12","title":"Added","text":"<ul> <li>Basic thumbnail/preview support for RAW images (currently <code>.raw</code>, <code>.dng</code>, <code>.rw2</code>, <code>.nef</code>, <code>.arw</code>, <code>.crw</code>, <code>.cr3</code>)<ul> <li>NOTE: These previews are currently slow to load given the nature of rendering them. In the future once thumbnail caching is added, this process should only happen once.</li> </ul> </li> <li>Thumbnail/preview support for HEIF images</li> </ul>"},{"location":"changelog/#fixed_15","title":"Fixed","text":"<ul> <li>Fixed sidebar not expanding horizontally</li> <li>Fixed \"Recent Library\" list not updating when creating a new library</li> <li>Fixed palletized images not loading with alpha channels</li> <li>Low resolution images (such as pixel art) now render with crisp edges in thumbnails and previews</li> <li>Fixed visual bug where the edit icon would show for incorrect fields</li> </ul>"},{"location":"changelog/#920-may-14th-2024","title":"9.2.0 [May 14<sup>th</sup>, 2024]","text":""},{"location":"changelog/#added_13","title":"Added","text":"<ul> <li>Full macOS and Linux support</li> <li>Ability to apply tags to multiple selections at once</li> <li>Right-click context menu for opening files or their locations</li> <li>Support for all filetypes inside of the library</li> <li>Configurable filetype blacklist</li> <li>Option to automatically open last used library on startup</li> <li>Tool to convert folder structure to tag tree</li> <li>SIGTERM handling in console window</li> <li>Keyboard shortcuts for basic functions</li> <li>Basic support for plaintext thumbnails</li> <li>Default icon for files with no thumbnail support</li> <li>Menu action to close library</li> <li>All tags now show in the \"Add Tag\" panel by default</li> <li>Modal view to view and manage all library tags</li> <li>Build scripts for Windows and macOS</li> <li>Help menu option to visit the GitHub repository</li> <li>Toggleable \"Recent Libraries\" list in the entry side panel</li> </ul>"},{"location":"changelog/#fixed_16","title":"Fixed","text":"<ul> <li>Fixed errors when performing actions with no library open</li> <li>Fixed bug where built-in tags were duplicated upon saving</li> <li>QThreads are now properly terminated on application exit</li> <li>Images with rotational EXIF data are now properly displayed</li> <li>Fixed \"truncated\" images causing errors</li> <li>Fixed images with large resolutions causing errors</li> </ul>"},{"location":"changelog/#changed_9","title":"Changed","text":"<ul> <li>Updated minimum Python version to 3.12</li> <li>Various UI improvements<ul> <li>Improved legibility of the Light Theme (still a WIP)</li> <li>Updated Dark Theme</li> <li>Added hand cursor to several clickable elements</li> </ul> </li> <li>Fixed network paths not being able to load</li> <li>Various code cleanup and refactoring</li> <li>New application icons</li> </ul>"},{"location":"changelog/#known-issues","title":"Known Issues","text":"<ul> <li>Using and editing multiple entry fields of the same type may result in incorrect field(s) being updated</li> <li>Adding Favorite or Archived tags via the thumbnail badges may apply the tag(s) to incorrect fields</li> <li>Searching for tag names with spaces does not currently function as intended<ul> <li>A temporary workaround it to omit spaces in tag names when searching</li> </ul> </li> <li>Sorting fields using the \"Sort Fields\" macro may result in edit icons being shown for incorrect fields</li> </ul>"},{"location":"changelog/#910-april-22nd-2024","title":"9.1.0 [April 22<sup>nd</sup>, 2024]","text":""},{"location":"changelog/#added_14","title":"Added","text":"<ul> <li>Initial public release</li> </ul>"},{"location":"colors/","title":"Colors","text":"<p>TagStudio features a variety of built-in tag colors, alongside the ability for users to create their own custom tag color palettes.</p>"},{"location":"colors/#tag-color-manager","title":"Tag Color Manager","text":"<p>The Tag Color Manager is where you can create and manage your custom tag colors and associated namespaces. You can access the Tag Color Manager from the \"File -&gt; Manage Tag Colors\" option in the menu bar.</p> <p></p>"},{"location":"colors/#creating-a-namespace","title":"Creating a Namespace","text":"<p>TagStudio uses namespaces to group colors into palettes. Namespaces are a way for you to use the same color name across multiple palettes without having to worry about name collision with other palettes. This is especially useful when sharing your color palettes with others!*</p> <p>* Color pack sharing coming in a future update</p> <p>To create your first namespace, either click the \"New Namespace\" button or the large button prompt underneath the built-in colors.</p> <p></p>"},{"location":"colors/#name","title":"Name","text":"<p>The display name of the namespace, used for presentation.</p>"},{"location":"colors/#id-slug","title":"ID Slug","text":"<p>An internal ID for the namespace which is automatically derived from the namespace name.</p> <p>Namespaces beginning with \"tagstudio\" are reserved by TagStudio and will automatically have their text changed.</p> <p>Note</p> <p>It's currently not possible to manually edit the Namespace ID Slug. This will be possible once sharable color packs are added.</p>"},{"location":"colors/#creating-a-color","title":"Creating a Color","text":"<p>Once you've created your first namespace, click the \"+\" button inside the namespace section to create a color. To edit a color that you've previously created, either click on the color name or right click and select \"Edit Color\" from the context menu.</p> <p></p>"},{"location":"colors/#name_1","title":"Name","text":"<p>The display name for the color, used for presentation. You may occasionally see the color name followed by the namespace name in parentheses to disambiguate it from other colors with the same name.</p>"},{"location":"colors/#id-slug_1","title":"ID Slug","text":"<p>Similar to Namespace ID Slugs, the ID Slug is used as an internal ID and is automatically derived from the tag color name.</p> <p>Note</p> <p>It's currently not possible to manually edit the Color ID Slug. This will be possible once sharable color packs are added.</p>"},{"location":"colors/#primary-color","title":"Primary Color","text":"<p>The primary color is used as the main tag color and by default is used as the background color with the text and border colors being derived from this color.</p>"},{"location":"colors/#secondary-color","title":"Secondary Color","text":"<p>By default, the secondary color is only used as an optional override for the tag text color. This color can be cleared by clicking the adjacent \"Reset\" button.</p> <p></p> <p>The secondary color can also be used as the tag border color by checking the \"Use Secondary Color for Border\" box.</p> <p></p>"},{"location":"colors/#using-colors","title":"Using Colors","text":"<p>When editing a tag, click the tag color button to bring up the tag color selection panel. From here you can choose any built-in TagStudio color as well as any of your custom colors.</p> <p></p>"},{"location":"contributing/","title":"Contributing","text":"<p>Thank you so much for showing interest in contributing to TagStudio! Here are a set of instructions and guidelines for contributing code or documentation to the project. This document will change over time, so make sure that your contributions still line up with the requirements here before submitting a pull request.</p>"},{"location":"contributing/#getting-started","title":"Getting Started","text":"<ul> <li>Check the Feature Roadmap page to see what priority features there are, the FAQ, as well as the project's Issues and Pull Requests.</li> <li>If you'd like to add a feature that isn't on the feature roadmap or doesn't have an open issue, PLEASE create a feature request issue for it discussing your intentions so any feedback or important information can be given by the team first.<ul> <li>We don't want you wasting time developing a feature or making a change that can't/won't be added for any reason ranging from pre-existing refactors to design philosophy differences.</li> </ul> </li> <li>Please don't create pull requests that consist of large refactors, especially without discussing them with us first. These end up doing more harm than good for the project by continuously delaying progress and disrupting everyone else's work.</li> <li>If you wish to discuss TagStudio further, feel free to join the Discord Server!</li> </ul>"},{"location":"contributing/#contribution-checklist","title":"Contribution Checklist","text":"<ul> <li>I've read the Feature Roadmap page</li> <li>I've read the FAQ</li> <li>I've checked the project's Issues and Pull Requests</li> <li>I've created a new issue for my feature/fix before starting work on it, or have at least notified others in the relevant existing issue(s) of my intention to work on it</li> <li>I've set up my development environment including Ruff, Mypy, and PyTest</li> <li>I've read the CONTRIBUTING.md/Contributing page on the documentation site as well as the and/or Style Guide</li> <li>I mean it, I've found or created an issue for my feature/fix!</li> </ul> <p>Note</p> <p>If the fix is small and self-explanatory (i.e. a typo), then it doesn't require an issue to be opened first. Issue tracking is supposed to make our lives easier, not harder. Please use your best judgement to minimize the amount of work for everyone involved.</p>"},{"location":"contributing/#creating-a-development-environment","title":"Creating a Development Environment","text":"<p>If you wish to develop for TagStudio, you'll need to create a development environment by installing the required dependencies. You have a number of options depending on your level of experience and familiarly with existing Python toolchains.</p> <p>If you know what you're doing and have developed for Python projects in the past, you can get started quickly with the \"Brief Instructions\" below. Otherwise, please see the full instructions on the documentation website for \"Creating a Development Environment\".</p>"},{"location":"contributing/#brief-instructions","title":"Brief Instructions","text":"<ol> <li>Have Python 3.12 and PIP installed. Also have FFmpeg installed if you wish to have audio/video playback and thumbnails.</li> <li>Clone the repository to the folder of your choosing:     <pre><code>git clone https://github.com/TagStudioDev/TagStudio.git\n</code></pre></li> <li> <p>Use a dependency manager such as uv or Poetry 2.0 to install the required dependencies, or alternatively create and activate a virtual environment with <code>venv</code>.</p> </li> <li> <p>If using a virtual environment instead of a dependency manager, install an editable version of the program and development dependencies with the following PIP command:</p> <pre><code>pip install -e \".[dev]\"\n</code></pre> <p>Otherwise, modify the command above for use with your dependency manager of choice. For example if using uv, you may use this:</p> <pre><code>uv pip install -e \".[dev]\"\n</code></pre> </li> </ol>"},{"location":"contributing/#workflow-checks","title":"Workflow Checks","text":"<p>When pushing your code, several automated workflows will check it against predefined tests and style checks. It's highly recommended that you run these checks locally beforehand to avoid having to fight back-and-forth with the workflow checks inside your pull requests.</p> <p>Tip</p> <p>To format the code automatically before each commit, there's a configured action available for the <code>pre-commit</code> hook. Install it by running <code>pre-commit install</code>. The hook will be executed each time on running <code>git commit</code>.</p>"},{"location":"contributing/#ruff","title":"Ruff","text":"<p>A Python linter and code formatter. Ruff uses the <code>pyproject.toml</code> as its config file and runs whenever code is pushed or pulled into the project.</p>"},{"location":"contributing/#running-locally","title":"Running Locally","text":"<p>Inside the root repository directory:</p> <ul> <li>Lint code with <code>ruff check</code><ul> <li>Some linting suggestions can be automatically formatted with <code>ruff check --fix</code></li> </ul> </li> <li>Format code with <code>ruff format</code></li> </ul> <p>Ruff should automatically discover the configuration options inside the pyproject.toml file. For more information, see the ruff configuration discovery docs.</p> <p>Ruff is also available as a VS Code extension, PyCharm plugin, and more.</p>"},{"location":"contributing/#mypy","title":"Mypy","text":"<p>Mypy is a static type checker for Python. It sure has a lot to say sometimes, but we recommend you take its advice when possible. Mypy also uses the <code>pyproject.toml</code> as its config file and runs whenever code is pushed or pulled into the project.</p>"},{"location":"contributing/#running-locally_1","title":"Running Locally","text":"<ul> <li>(First time only) Run the following:<ul> <li><code>mkdir -p .mypy_cache</code></li> <li><code>mypy --install-types --non-interactive</code></li> </ul> </li> <li>You can now check code by running <code>mypy --config-file pyproject.toml .</code> in the repository root. (Don't forget the \".\" at the end!)</li> </ul> <p>Mypy is also available as a VS Code extension, PyCharm plugin, and more.</p>"},{"location":"contributing/#pytest","title":"PyTest","text":"<ul> <li>Run all tests by running <code>pytest tests/</code> in the repository root.</li> </ul>"},{"location":"contributing/#code-style","title":"Code Style","text":"<p>See the Style Guide</p>"},{"location":"contributing/#modules-implementations","title":"Modules &amp; Implementations","text":"<ul> <li>Do not modify legacy library code in the <code>src/core/library/json/</code> directory</li> <li>Avoid direct calls to <code>os</code><ul> <li>Use <code>Pathlib</code> library instead of <code>os.path</code></li> <li>Use <code>platform.system()</code> instead of <code>os.name</code> and <code>sys.platform</code></li> </ul> </li> <li>Don't prepend local imports with <code>tagstudio</code>, stick to <code>src</code></li> <li>Use the <code>logger</code> system instead of <code>print</code> statements</li> <li>Avoid nested f-strings</li> <li>Use HTML-like tags inside Qt widgets over stylesheets where possible</li> </ul>"},{"location":"contributing/#commit-and-pull-request-style","title":"Commit and Pull Request Style","text":"<ul> <li>Use Conventional Commits as a guideline for commit messages. This allows us to easily generate changelogs for releases.<ul> <li>See some examples of what this looks like in practice.</li> </ul> </li> <li>Use clear and concise commit messages. If your commit does too much, either consider breaking it up into smaller commits or providing extra detail in the commit description.</li> <li>Pull requests should have an adequate title and description which clearly outline your intentions and changes/additions. Feel free to provide screenshots, GIFs, or videos, especially for UI changes.</li> <li>Pull requests should ideally be limited to a single feature or fix.</li> </ul> <p>Important</p> <p>Please do not force push if your PR is open for review! Force pushing makes it impossible to discern which changes have already been reviewed and which haven't. This means a reviewer will then have to re-review all the already reviewed code, which is a lot of unnecessary work for reviewers.</p> <p>Tip</p> <p>If you're unsure where to stop the scope of your PR, ask yourself: \"If I broke this up, could any parts of it still be used by the project in the meantime?\"</p>"},{"location":"contributing/#runtime-requirements","title":"Runtime Requirements","text":"<ul> <li>Final code must function on supported versions of Windows, macOS, and Linux:<ul> <li>Windows: 10, 11</li> <li>macOS: 13.0+</li> <li>Linux: Varies</li> </ul> </li> <li>Final code must NOT:<ul> <li>Contain superfluous or unnecessary logging statements</li> <li>Cause unreasonable slowdowns to the program outside of a progress-indicated task</li> <li>Cause undesirable visual glitches or artifacts on screen</li> </ul> </li> </ul>"},{"location":"contributing/#documentation-guidelines","title":"Documentation Guidelines","text":"<p>Documentation contributions include anything inside of the <code>docs/</code> folder, as well as the <code>README.md</code> and <code>CONTRIBUTING.md</code> files. Documentation inside the <code>docs/</code> folder is built and hosted on our static documentation site, docs.tagstud.io.</p> <ul> <li>Use \"dash-case / kebab-case\" for file and folder names</li> <li>Follow the folder structure pattern</li> <li>Don't add images or other media with excessively large file sizes</li> <li>Provide alt text for all embedded media</li> <li>Use \"Title Case\" for title capitalization</li> </ul>"},{"location":"contributing/#translation-guidelines","title":"Translation Guidelines","text":"<p>Translations are performed on the TagStudio Weblate project.</p> <p>Translation guidelines coming soon.</p>"},{"location":"developing/","title":"Developing","text":"<p>If you wish to develop for TagStudio, you'll need to create a development environment by installing the required dependencies. You have a number of options depending on your level of experience and familiarity with existing Python toolchains.</p> <p>Contributing</p> <p>If you wish to contribute to TagStudio's development, please read our CONTRIBUTING.md!</p>"},{"location":"developing/#installing-python","title":"Installing Python","text":"<p>Python 3.12 is required to develop for TagStudio. Any version matching \"Python 3.12.x\" should work, with \"x\" being any number. Alternatively you can use a tool such as pyenv to install this version of Python without affecting any existing Python installations on your system. Tools such as uv can also install Python versions.</p> <p>Python Aliases</p> <p>Depending on your system, Python may be called <code>python</code>, <code>py</code>, <code>python3</code>, or <code>py3</code>. These instructions use the alias <code>python</code> for consistency.</p> <p>If you already have Python installed on your system, you can check the version by running the following command:</p> <pre><code>python --version\n</code></pre>"},{"location":"developing/#installing-with-pyenv","title":"Installing with pyenv","text":"<p>If you choose to install Python using pyenv, please refer to the following instructions:</p> <ol> <li>Follow pyenv's install instructions for your system.</li> <li>Install the appropriate Python version with pyenv by running <code>pyenv install 3.12</code> (This will not mess with your existing Python installation).</li> <li>Navigate to the repository root folder in your terminal and run <code>pyenv local 3.12</code>. You could alternatively use <code>pyenv shell 3.12</code> or <code>pyenv global 3.12</code> instead to set the Python version for the current terminal session or the entire system respectively, however using <code>local</code> is recommended.</li> </ol>"},{"location":"developing/#cloning-from-github","title":"Cloning from GitHub","text":"<p>The repository can be cloned/downloaded via <code>git</code> in your terminal, or by downloading the zip file from the \"Code\" button on the repository page.</p> <pre><code>git clone https://github.com/TagStudioDev/TagStudio.git\n</code></pre>"},{"location":"developing/#installing-dependencies","title":"Installing Dependencies","text":"<p>To install the required dependencies, you can use a dependency manager such as uv or Poetry 2.0. Alternatively you can create a virtual environment and manually install the dependencies yourself.</p>"},{"location":"developing/#installing-with-uv","title":"Installing with uv","text":"<p>If using uv, you can install the dependencies for TagStudio with the following command:</p> <pre><code>uv pip install -e \".[dev]\"\n</code></pre> <p>A reference <code>.envrc</code> is provided for use with direnv, see <code>contrib/.envrc-uv</code>.</p>"},{"location":"developing/#installing-with-poetry","title":"Installing with Poetry","text":"<p>If using Poetry, you can install the dependencies for TagStudio with the following command:</p> <pre><code>poetry install --with dev\n</code></pre>"},{"location":"developing/#manual-installation","title":"Manual Installation","text":"<p>If you choose to manually set up a virtual environment and install dependencies instead of using a dependency manager, please refer to the following instructions:</p> <p>Virtual Environments</p> <p>Learn more about setting up a virtual environment with Python's official tutorial.</p> <ol> <li> <p>In the root repository directory, create a python virtual environment:</p> <pre><code>python -m venv .venv\n</code></pre> </li> <li> <p>Activate your environment:</p> <ul> <li>Windows w/Powershell: <code>.venv\\Scripts\\Activate.ps1</code></li> <li>Windows w/Command Prompt: <code>.venv\\Scripts\\activate.bat</code></li> <li>Linux/macOS: <code>source .venv/bin/activate</code></li> </ul> <p>Supported Shells</p> <p>Depending on your system, the regular activation script might not work on alternative shells. In this case, refer to the table below for supported shells:</p> Shell Script Bash/ZSH <code>.venv/bin/activate</code> Fish <code>.venv/bin/activate.fish</code> CSH/TCSH <code>.venv/bin/activate.csh</code> PowerShell <code>.venv/bin/activate.ps1</code> </li> <li> <p>Use the following PIP command to create an editable installation and install the required development dependencies:</p> <pre><code>pip install -e \".[dev]\"\n</code></pre> </li> </ol>"},{"location":"developing/#nixos","title":"Nix(OS)","text":"<p>If using Nix, there is a development environment already provided in the flake that is accessible with the following command:</p> <pre><code>nix develop\n</code></pre> <p>A reference <code>.envrc</code> is provided for use with direnv, see <code>contrib/.envrc-nix</code>.</p>"},{"location":"developing/#tooling","title":"Tooling","text":""},{"location":"developing/#editor-integration","title":"Editor Integration","text":"<p>The entry point for TagStudio is <code>src/tagstudio/main.py</code>. You can target this file from your IDE to run or connect a debug session. The example(s) below show off example launch scripts for different IDEs. Here you can also take advantage of launch arguments to pass your own test libraries to use while developing. You can find more editor configurations in <code>contrib</code>.</p> VS Code .vscode/launch.json<pre><code>{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"TagStudio\",\n            \"type\": \"python\",\n            \"request\": \"launch\",\n            \"program\": \"${workspaceRoot}/src/tagstudio/main.py\",\n            \"console\": \"integratedTerminal\",\n            \"justMyCode\": true,\n            \"args\": [\"-o\", \"~/Documents/Example\"]\n        }\n    ]\n}\n</code></pre>"},{"location":"developing/#pre-commit","title":"pre-commit","text":"<p>There is a pre-commit configuration that will run through some checks before code is committed. Namely, mypy and the Ruff linter and formatter will check your code, catching those nits right away.</p> <p>Once you have pre-commit installed, just run:</p> <pre><code>pre-commit install\n</code></pre> <p>From there, Git will automatically run through the hooks during commit actions!</p>"},{"location":"developing/#direnv","title":"direnv","text":"<p>You can automatically enter this development shell, and keep your user shell, with a tool like direnv. Some reference <code>.envrc</code> files are provided in the repository at <code>contrib</code>.</p> <p>Two currently available are for Nix and uv, to use one:</p> <pre><code>ln -s .envrc-$variant .envrc\n</code></pre> <p>You will have to allow usage of it.</p> <p>direnv Security Framework</p> <p>These files are generally a good idea to check, as they execute commands on directory load. direnv has a security framework to only run <code>.envrc</code> files you have allowed, and does keep track on if it has changed. So, with that being said, the file may need to be allowed again if modifications are made.</p> <pre><code>cat .envrc # You are checking them, right?\ndirenv allow\n</code></pre>"},{"location":"developing/#building","title":"Building","text":"<p>To build your own executables of TagStudio, first follow the steps in \"Installing Dependencies.\" Once that's complete, run the following PyInstaller command:</p> <pre><code>pyinstaller tagstudio.spec\n</code></pre> <p>If you're on Windows or Linux and wish to build a portable executable, then pass the following flag:</p> <pre><code>pyinstaller tagstudio.spec -- --portable\n</code></pre> <p>The resulting executable file(s) will be located in a new folder named \"dist\".</p>"},{"location":"entries/","title":"Entries","text":"<p>Entries are the individual representations of your files inside a TagStudio library. Each one corresponds one-to-one to a file on disk, and tracks all of the additional tags and metadata that you attach to it inside TagStudio.</p>"},{"location":"entries/#storage","title":"Storage","text":"<p>File entry data is stored within the <code>ts_library.sqlite</code> file inside each library's <code>.TagStudio</code> folder. No modifications are made to your actual files on disk, and nothing like sidecar files are generated for your files.</p>"},{"location":"entries/#appearance","title":"Appearance","text":"<p>File entries appear as thumbnails inside the grid display. The preview panel shows a more detailed preview of the file, along with extra file stats and all attached TagStudio tags and fields.</p>"},{"location":"entries/#unlinked-entries","title":"Unlinked Entries","text":"<p>If the file that an entry is referencing has been moved, renamed, or deleted on disk, then TagStudio will display its unlinked status with a red chain-link icon instead of its thumbnail image. Certain uncached stats such as the file size and image dimensions will also be unavailable to see in the preview panel.</p> <p>To fix file entries that have become unlinked, select the \"Fix Unlinked Entries\" option from the Tools menu. From there, refresh the unlinked entry count and choose whether to search and relink you files, and/or delete the file entries from your library. This will NOT delete or modify any files on disk.</p>"},{"location":"entries/#internal-structure","title":"Internal Structure","text":"<ul> <li><code>id</code> (<code>INTEGER</code>/<code>int</code>, <code>UNIQUE</code>, <code>NOT NULL</code>, <code>PRIMARY KEY</code>)<ul> <li>The ID for the file entry.</li> <li>Used for guaranteed unique references.</li> </ul> </li> <li><code>folder</code> (<code>INTEGER</code>/<code>int</code>, <code>NOT NULL</code>, <code>FOREIGN KEY</code>)<ul> <li>Not currently used, may be removed.</li> </ul> </li> <li><code>path</code> (<code>VARCHAR</code>/<code>Path</code>, <code>UNIQUE</code>, <code>NOT NULL</code>)<ul> <li>The filename and filepath relative to the root of the library folder.</li> <li>(E.g. for library \"Folder\", path = \"any_subfolders/filename.txt\")</li> </ul> </li> <li><code>suffix</code> (<code>VARCHAR</code>/<code>str</code>, <code>NOT NULL</code>)<ul> <li>The filename suffix with no leading dot.</li> <li>Used for quicker file extension checks.</li> </ul> </li> <li><code>date_created</code> (<code>DATETIME</code>/<code>Datetime</code>)<ul> <li>Not currently used, will be implemented in an upcoming update.</li> <li>The creation date of the file (not the entry).</li> <li>Generated from <code>st_birthtime</code> on Windows and Mac, and <code>st_ctime</code> on Linux.</li> </ul> </li> <li><code>date_modified</code> (<code>DATETIME</code>/<code>Datetime</code>)<ul> <li>Not currently used, will be implemented in an upcoming update.</li> <li>The latest modification date of the file (not the entry).</li> <li>Generated from <code>st_mtime</code>.</li> </ul> </li> <li><code>date_added</code> (<code>DATETIME</code>/<code>Datetime</code>)<ul> <li>The date the file entry was added to the TagStudio library.</li> </ul> </li> </ul>"},{"location":"entries/#table-relationships","title":"Table Relationships","text":"<ul> <li><code>tag_entries</code><ul> <li>A relationship between <code>entry_id</code> to <code>tag_id</code>s from the <code>tags</code> table.</li> </ul> </li> <li><code>text_fields</code><ul> <li>(TODO: determine the relationship for <code>entry_id</code>)</li> </ul> </li> <li><code>datetime_fields</code><ul> <li>(TODO: determine the relationship for <code>entry_id</code>)</li> </ul> </li> </ul>"},{"location":"fields/","title":"Fields","text":"<p>Fields are additional types of metadata that you can attach to file entries. Like tags, fields are not stored inside files themselves nor in sidecar files, but rather inside the respective TagStudio library save file.</p>"},{"location":"fields/#field-types","title":"Field Types","text":""},{"location":"fields/#text-line","title":"Text Line","text":"<p>A string of text, displayed as a single line.</p> <ul> <li>e.g: Title, Author, Artist, URL, etc.</li> </ul>"},{"location":"fields/#text-box","title":"Text Box","text":"<p>A long string of text displayed as a box of text.</p> <ul> <li>e.g: Description, Notes, etc.</li> </ul>"},{"location":"fields/#datetime","title":"Datetime","text":"<p>A date and time value.</p> <ul> <li>e.g: Date Published, Date Taken, etc.</li> </ul>"},{"location":"ignore/","title":"Ignoring Files &amp; Directories","text":"<p>Legacy File Extension Ignoring</p> <p>TagStudio versions prior to v9.5.4 use a different, more limited method to exclude or include file extensions from your library and subsequent searches. Opening a pre-exiting library in v9.5.4 or later will non-destructively convert this to the newer, more extensive <code>.ts_ignore</code> format.</p> <p>If you're still running an older version of TagStudio in the meantime, you can access the legacy system by going to \"Edit -&gt; Manage File Extensions\" in the menubar.</p> <p>TagStudio offers the ability to ignore specific files and directories via a <code>.ts_ignore</code> file located inside your library's <code>.TagStudio</code> folder. This file is designed to use very similar glob-style pattern matching as the <code>.gitignore</code> file used by Git\u2122<sup>1</sup>. It can be edited within TagStudio or opened to edit with an external program by going to the \"Edit -&gt; Ignore Files\" option in the menubar.</p> <p>This file is only referenced when scanning directories for new files to add to your library, and does not apply to files that have already been added to your library.</p> <p>Tip</p> <p>If you just want some specific examples of how to achieve common tasks with the ignore patterns (e.g. ignoring a single file type, ignoring a specific folder) then jump to the \"Use Cases\" section!</p> Example .ts_ignore file My Library/.TagStudio/.ts_ignore<pre><code># TagStudio .ts_ignore file.\n\n# Code\n__pycache__\n.pytest_cache\n.venv\n.vs\n\n# Projects\nMinecraft/**/Metadata\nMinecraft/Website\n!Minecraft/Website/*.png\n!Minecraft/Website/*.css\n\n# Documents\n*.doc\n*.docx\n*.ppt\n*.pptx\n*.xls\n*.xlsx\n</code></pre>"},{"location":"ignore/#pattern-format","title":"Pattern Format","text":"<p>This section sourced and adapted from Git's<sup>1</sup> <code>.gitignore</code> documentation.</p>"},{"location":"ignore/#internal-processes","title":"Internal Processes","text":"<p>When scanning your library directories, the <code>.ts_ignore</code> file is read by either the <code>wcmatch</code> library or <code>ripgrep</code> in glob mode depending if you have the later installed on your system and it's detected by TagStudio. Ripgrep is the preferred method for scanning directories due to its improved performance and identical pattern matching to <code>.gitignore</code>. This mixture of tools may lead to slight inconsistencies if not using <code>ripgrep</code>.</p>"},{"location":"ignore/#comments","title":"Comments ( <code>#</code> )","text":"<p>A <code>#</code> symbol at the start of a line indicates that this line is a comment, and match no items. Blank lines are used to enhance readability and also match no items.</p> <ul> <li>Can be escaped by putting a backslash (\"<code>\\</code>\") in front of the <code>#</code> symbol.</li> </ul> Example commentOrganizing with commentsEscape a # symbol <pre><code># This is a comment! I can say whatever I want on this line.\nfile_that_is_being_matched.txt\n\n# file_that_is_NOT_being_matched.png\nfile_that_is_being_matched.png\n</code></pre> <pre><code># TagStudio .ts_ignore file.\n\n# Minecraft Stuff\nMinecraft/**/Metadata\nMinecraft/Website\n!Minecraft/Website/*.png\n!Minecraft/Website/*.css\n\n# Microsoft Office\n*.doc\n*.docx\n*.ppt\n*.pptx\n*.xls\n*.xlsx\n</code></pre> <pre><code># To ensure a file named '#hashtag.jpg' is ignored:\n\\#hashtag.jpg\n</code></pre>"},{"location":"ignore/#directories","title":"Directories ( <code>/</code> )","text":"<p>The forward slash \"<code>/</code>\" is used as the directory separator. Separators may occur at the beginning, middle or end of the <code>.ts_ignore</code> search pattern.</p> <ul> <li> <p>If there is a separator at the beginning or middle (or both) of the pattern, then the pattern is relative to the directory level of the particular <code>.TagStudio</code> library folder itself. Otherwise the pattern may also match at any level below the <code>.TagStudio</code> folder level.</p> </li> <li> <p>If there is a separator at the end of the pattern then the pattern will only match directories, otherwise the pattern can match both files and directories.</p> </li> </ul> Example folder patternExample nested folder pattern <pre><code># Matches \"frotz\" and \"a/frotz\" if they are directories.\nfrotz/\n</code></pre> <pre><code># Matches \"doc/frotz\" but not \"a/doc/frotz\".\ndoc/frotz/\n</code></pre>"},{"location":"ignore/#negation","title":"Negation ( <code>!</code> )","text":"<p>A <code>!</code> prefix before a pattern negates the pattern, allowing any files matched matched by previous patterns to be un-matched.</p> <ul> <li>Any matching file excluded by a previous pattern will become included again.</li> <li>It is not possible to re-include a file if a parent directory of that file is excluded.</li> </ul> Example negationEscape a ! Symbol <pre><code># All .jpg files will be ignored, except any located in the 'Photos' folder.\n*.jpg\nPhotos/!*.jpg\n</code></pre> <pre><code># To ensure a file named '!wowee.jpg' is ignored:\n\\!wowee.jpg\n</code></pre>"},{"location":"ignore/#wildcards","title":"Wildcards","text":""},{"location":"ignore/#single-asterisks","title":"Single Asterisks ( <code>*</code> )","text":"<p>An asterisk \"<code>*</code>\" matches anything except a slash.</p> File examplesFolder examples <pre><code># Matches all .png files in the \"Images\" folder.\nImages/*.png\n\n# Matches all .png files in all folders\n*.png\n</code></pre> <pre><code># Matches any files or folders directly in \"Images/\" but not deeper levels.\n#   Matches file \"Images/mario.jpg\"\n#   Matches folder \"Images/Mario\"\n#   Does not match file \"Images/Mario/cat.jpg\"\nImages/*\n</code></pre>"},{"location":"ignore/#question-marks","title":"Question Marks ( <code>?</code> )","text":"<p>The character \"<code>?</code>\" matches any one character except \"<code>/</code>\".</p> File examplesFolder examples <pre><code># Matches any .png file starting with \"IMG_\" and ending in any four characters.\n#   Matches \"IMG_0001.png\"\n#   Matches \"Photos/IMG_1234.png\"\n#   Does not match \"IMG_1.png\"\nIMG_????.png\n\n# Same as above, except matches any file extension instead of only .png\nIMG_????.*\n</code></pre> <pre><code># Matches all files in any direct subfolder of \"Photos\" beginning in \"20\".\n#   Matches \"Photos/2000\"\n#   Matches \"Photos/2024\"\n#   Matches \"Photos/2099\"\n#   Does not match \"Photos/1995\"\nPhotos/20??/\n</code></pre>"},{"location":"ignore/#double-asterisks","title":"Double Asterisks ( <code>**</code> )","text":"<p>Two consecutive asterisks (\"<code>**</code>\") in patterns matched against full pathname may have special meaning:</p> <ul> <li>A leading \"<code>**</code>\" followed by a slash means matches in all directories.</li> <li>A trailing \"<code>/**</code>\" matches everything inside.</li> <li>A slash followed by two consecutive asterisks then a slash (\"<code>/**/</code>\") matches zero or more directories.</li> <li>Other consecutive asterisks are considered regular asterisks and will match according to the previous rules.</li> </ul> Leading **Trailing /**Middle /**/ <pre><code># Both match file or directory \"foo\" anywhere\n**/foo\nfoo\n\n# Matches file or directory \"bar\" anywhere that is directly under directory \"foo\"\n**/foo/bar\n</code></pre> <pre><code># Matches all files inside directory \"abc\" with infinite depth.\nabc/**\n</code></pre> <pre><code># Matches \"a/b\", \"a/x/b\", \"a/x/y/b\" and so on.\na/**/b\n</code></pre>"},{"location":"ignore/#square-brackets-a-z","title":"Square Brackets ( <code>[a-Z]</code> )","text":"<p>Character sets and ranges are specific and powerful forms of wildcards that use characters inside of brackets (<code>[]</code>) to leverage very specific matching. The range notation, e.g. <code>[a-zA-Z]</code>, can be used to match one of the characters in a range.</p> <p>Tip</p> <p>For more in-depth examples and explanations on how to use ranges, please reference the <code>glob</code> man page.</p> Range examplesSet examples <pre><code># Matches all files that start with \"IMG_\" and end in a single numeric character.\n    # Matches \"IMG_0.jpg\", \"IMG_7.png\"\n    # Does not match \"IMG_10.jpg\", \"IMG_A.jpg\"\nIMG_[0-9]\n\n# Matches all files that start with \"IMG_\" and end in a single alphabetic character\nIMG_[a-z]\n</code></pre> <pre><code># Matches all files that start with \"IMG_\" and in any character in the set.\n    # Matches \"draft_a.docx\", \"draft_b.docx\", \"draft_c.docx\"\n    # Does not match \"draft_d.docx\"\ndraft_[abc]\n\n# Matches all files that start with \"IMG_\" and end in a single alphabetic character\nIMG_[a-z]\n</code></pre>"},{"location":"ignore/#use-cases","title":"Use Cases","text":""},{"location":"ignore/#ignoring-files-by-extension","title":"Ignoring Files by Extension","text":"Ignore all .jpg filesIgnore all files EXCEPT .jpg filesIgnore all .jpg files in specific folders <pre><code>*.jpg\n</code></pre> <pre><code>*\n!*.jpg\n</code></pre> <pre><code>./Photos/Worst Vacation/*.jpg\nMusic/Artwork Art/*.jpg\n</code></pre> <p>Ensuring Complete Extension Matches</p> <p>For some filetypes, it may be nessisary to specify different casing and alternative spellings in order to match with all possible variations of an extension in your library.</p> Ignore (Most) Possible JPEG File Extensions<pre><code># The JPEG Cinematic Universe\n*.jpg\n*.jpeg\n*.jfif\n*.jpeg_large\n*.JPG\n*.JPEG\n*.JFIF\n*.JPEG_LARGE\n</code></pre>"},{"location":"ignore/#ignoring-a-folder","title":"Ignoring a Folder","text":"Ignore all \"Cache\" foldersIgnore a \"Downloads\" folderIgnore .jpg files in specific folders <pre><code># Matches any folder called \"Cache\" no matter where it is in your library.\ncache/\n</code></pre> <pre><code># \"Downloads\" must be a folder on the same level as your \".TagStudio\" folder.\n#   Does not match with folders name \"Downloads\" elsewhere in your library\n#   Does not match with a file called \"Downloads\"\n/Downloads/\n</code></pre> <pre><code>Photos/Worst Vacation/*.jpg\n/Music/Artwork Art/*.jpg\n</code></pre> <ol> <li> <p>The term \"Git\" is a licensed trademark of \"The Git Project\", a member of the Software Freedom Conservancy. Git is released under the GNU General Public License version 2.0, an open source license. TagStudio is not associated with the Git Project, only including systems based on some therein.\u00a0\u21a9\u21a9</p> </li> </ol>"},{"location":"install/","title":"Installation","text":"<p>TagStudio provides executable releases as well as full access to its source code under the GPLv3 license.</p>"},{"location":"install/#executables","title":"Executables","text":"<p>To download executable builds of TagStudio, visit the Releases page of the GitHub repository and download the latest release for your system under the \"Assets\" section at the bottom of the release.</p> <p>TagStudio has builds for  Windows,  macOS (Apple Silicon &amp; Intel), and  Linux. We also offer portable releases for Windows and Linux which are self-contained and easier to move around.</p> <p>Third-Party Dependencies</p> <p>You may need to install third-party dependencies such as FFmpeg to use the full feature set of TagStudio.</p> <p> macOS \"Privacy &amp; Security\" Popup</p> <p>On macOS, you may be met with a message saying \"\"TagStudio\" can't be opened because Apple cannot check it for malicious software.\" If you encounter this, then you'll need to go to the \"Settings\" app, navigate to \"Privacy &amp; Security\", and scroll down to a section that says \"\"TagStudio\" was blocked from use because it is not from an identified developer.\" Click the \"Open Anyway\" button to allow TagStudio to run. You should only have to do this once after downloading the application.</p>"},{"location":"install/#package-managers","title":"Package Managers","text":"<p>Unofficial Releases</p> <p>We do not currently publish TagStudio to remote package repositories. Any TagStudio distributions outside of the GitHub repository are unofficial and not maintained by us!</p> <p>Installation support will not be given to users installing from unofficial sources. Use these versions at your own risk!</p>"},{"location":"install/#installing-with-pip","title":"Installing with PIP","text":"<p>TagStudio is installable via PIP. Note that since we don't currently distribute on PyPI, the repository needs to be cloned and installed locally. Make sure you have Python 3.12 and PIP installed if you choose to install using this method.</p> <p>The repository can be cloned/downloaded via <code>git</code> in your terminal, or by downloading the zip file from the \"Code\" button on the repository page.</p> <pre><code>git clone https://github.com/TagStudioDev/TagStudio.git\n</code></pre> <p>Once cloned or downloaded, you can install TagStudio with the following PIP command:</p> <pre><code>pip install .\n</code></pre> <p>Developer Dependencies</p> <p>If you wish to create an editable install with the additional dependencies required for developing TagStudio, use this modified PIP command instead: <pre><code>pip install -e \".[dev]\"\n</code></pre> See more under \"Developing\"</p> <p>TagStudio can now be launched via the <code>tagstudio</code> command in your terminal.</p>"},{"location":"install/#linux","title":"Linux","text":"<p>Some external dependencies are required for TagStudio to execute. Below is a table of known packages that will be necessary.</p> Package Reason dbus required for Qt; opening desktop applications ffmpeg audio/video playback libstdc++ required for Qt libva hardware rendering with VAAPI libvdpau hardware rendering with VDPAU libx11 required for Qt libxcb-cursor OR xcb-util-cursor required for Qt libxkbcommon required for Qt libxrandr hardware rendering pipewire PipeWire audio support qt required qt-multimedia required qt-wayland Wayland support"},{"location":"install/#nixos","title":"Nix(OS)","text":"<p>For Nix(OS), the TagStudio repository includes a flake that provides some outputs such as a development shell and package.</p> <p>Two packages are provided: <code>tagstudio</code> and <code>tagstudio-jxl</code>. The distinction was made because <code>tagstudio-jxl</code> has an extra compilation step for JPEG-XL image support. To give either of them a test run, you can execute <code>nix run github:TagStudioDev/TagStudio#tagstudio</code>. If you are in a cloned repository and wish to run a package with the context of the repository, you can simply use <code>nix run</code> with no arguments.</p> <p><code>nix build</code> can be used in place of <code>nix run</code> if you only want to build. The packages will only build if tests pass.</p> <p>Nix Support</p> <p>Support for Nix is handled on a best-effort basis by one of our maintainers. Issues related to Nix may be slower to resolve, and could require further details.</p> <p>Want to add TagStudio into your configuration?</p> <p>This can be done by first adding the flake input into your <code>flake.nix</code>:</p> flake.nix<pre><code>{\n  inputs = {\n    nixpkgs.url = \"github:NixOS/nixpkgs/nixos-unstable\";\n\n    tagstudio = {\n      url = \"github:TagStudioDev/TagStudio\";\n      inputs.nixpkgs.follows = \"nixpkgs\"; # Use the same package set as your flake.\n    };\n  };\n}\n</code></pre> <p>Then, make sure you add the <code>inputs</code> context to your configuration:</p> NixOS with Home ManagerNixOSHome Manager (standalone) flake.nix<pre><code>{\n  outputs =\n    inputs@{ home-manager, nixpkgs, ... }:\n      {\n        nixosConfigurations.HOSTNAME = nixpkgs.lib.nixosSystem {\n          system = \"x86_64-linux\";\n\n          specialArgs = { inherit inputs; };\n          modules = [\n            ./configuration.nix\n\n            home-manager.nixosModules.home-manager\n            {\n              home-manager = {\n                useGlobalPkgs = true;\n                useUserPackages = true;\n\n                extraSpecialArgs = { inherit inputs; };\n                users.USER.imports = [\n                  ./home.nix\n                ];\n              };\n            }\n          ];\n        };\n      };\n}\n</code></pre> flake.nix<pre><code>{\n  outputs =\n    inputs@{ nixpkgs, ... }:\n      {\n        nixosConfigurations.HOSTNAME = nixpkgs.lib.nixosSystem {\n          system = \"x86_64-linux\";\n\n          specialArgs = { inherit inputs; };\n          modules = [\n            ./configuration.nix\n          ];\n        };\n      };\n}\n</code></pre> flake.nix<pre><code>{\n  outputs =\n    inputs@{ home-manager, nixpkgs, ... }:\n    let\n      pkgs = import nixpkgs {\n        system = \"x86_64-linux\";\n      };\n    in\n    {\n      homeConfigurations.USER = home-manager.lib.homeManagerConfiguration {\n        inherit pkgs;\n\n        extraSpecialArgs = { inherit inputs; };\n        modules = [\n          ./home.nix\n        ];\n      };\n    };\n}\n</code></pre> <p>Finally, <code>inputs</code> can be used in a module to add the package to your packages list:</p> Home Manager moduleNixOS module home.nix<pre><code>{ inputs, pkgs, ... }:\n\n{\n  home.packages = [\n    inputs.tagstudio.packages.${pkgs.stdenv.hostPlatform.system}.tagstudio\n  ];\n}\n</code></pre> configuration.nix<pre><code>{ inputs, pkgs, ... }:\n\n{\n  environment.systemPackages = [\n    inputs.tagstudio.packages.${pkgs.stdenv.hostPlatform.system}.tagstudio\n  ];\n}\n</code></pre> <p>Don't forget to rebuild!</p>"},{"location":"install/#third-party-dependencies","title":"Third-Party Dependencies","text":"<p>Tip</p> <p>You can check to see if these dependencies are correctly located by launching TagStudio and going to \"About TagStudio\" in the menu bar.</p>"},{"location":"install/#ffmpegffprobe","title":"FFmpeg/FFprobe","text":"<p>For audio/video thumbnails and playback you'll need FFmpeg installed on your system. If you encounter any issues with this, please reference our FFmpeg Help guide.</p>"},{"location":"install/#rar-extractor","title":"RAR Extractor","text":"<p>To generate thumbnails for RAR-based files (like <code>.cbr</code>) you'll need an extractor capable of handling them.</p> <ul> <li> <p> On Linux you'll need to install either <code>unrar</code> (likely in you distro's non-free repository) or <code>unrar-free</code> from your package manager.</p> </li> <li> <p> On macOS <code>unrar</code> can be installed through Homebrew's <code>rar</code> formula.</p> <p> macOS \"Privacy &amp; Security\" Popup</p> <p>On macOS, you may be met with a message similar to  \"\"unrar\" Not Opened. Apple could not verify \"unrar\" is free of malware that may harm your Mac or compromise your privacy\" If you encounter this, then you'll need to go to the \"Settings\" app, navigate to \"Privacy &amp; Security\", and scroll down to a section that says \"\"unrar\" was blocked from use because it is not from an identified developer.\" Click the \"Open Anyway\" button to allow unrar to be used.</p> </li> <li> <p> On Windows you'll need to install either <code>WinRAR</code> or <code>7-zip</code> and add their folder to you <code>PATH</code>.</p> <p>WinRAR License</p> <p>Both <code>unrar</code> and <code>WinRAR</code> require a license, but since the evaluation copy has no time limit you can simply dismiss the prompt.</p> </li> </ul>"},{"location":"install/#ripgrep","title":"ripgrep","text":"<p>A recommended tool to improve the performance of directory scanning is <code>ripgrep</code>, a Rust-based directory walker that natively integrates with our <code>.ts_ignore</code> (<code>.gitignore</code>-style) pattern matching system for excluding files and directories. Ripgrep is already pre-installed on some Linux distributions and also available from several package managers.</p>"},{"location":"libraries/","title":"Libraries","text":"<p>Info</p> <p>This page is a work in progress and needs to be updated with additional information.</p> <p>The library is how TagStudio represents your chosen directory, with every file inside being represented by a file entry. You can have as many or few libraries as you wish, since each libraries' data is stored within a <code>.TagStudio</code> folder at its root. From there the library save file itself is stored as <code>ts_library.sqlite</code>, with TagStudio versions 9.4 and below using a the legacy <code>ts_library.json</code> format.</p> <p>Note that this means tags you create only exist per-library. Global tags along with other library structure updates are planned for future releases on the roadmap.</p>"},{"location":"library-changes/","title":"Library Format","text":"<p>This page outlines the various changes made to the TagStudio library save file format over time, sometimes referred to as the \"database\" or \"database file\".</p>"},{"location":"library-changes/#json","title":"JSON","text":"<p>Legacy (JSON) library save format versions were tied to the release version of the program itself. This number was stored in a <code>version</code> key inside the JSON file.</p>"},{"location":"library-changes/#versions-100-942","title":"Versions 1.0.0 - 9.4.2","text":"Used From Format Location v1.0.0 JSON <code>&lt;Library Folder&gt;</code>/.TagStudio/ts_library.json <p>The legacy database format for public TagStudio releases v9.1 through v9.4.2. Variations of this format had been used privately since v1.0.0.</p> <p>Replaced by the new SQLite format introduced in TagStudio v9.5.0 Pre-Release 1.</p>"},{"location":"library-changes/#sqlite","title":"SQLite","text":"<p>Starting with TagStudio v9.5.0-pr1, the library save format has been moved to a SQLite format. Legacy JSON libraries are migrated (with the user's consent) to the new format when opening in current versions of the program. The save format versioning is now separate from the program's versioning number.</p> <p>Versions 1-100 stored the database version in a table called <code>preferences</code> in a row with the <code>key</code> column of <code>\"DB_VERSION\"</code> inside the corresponding <code>value</code> column.</p> <p>Versions &gt;101 store the database version in a table called <code>versions</code> in a row with the <code>key</code> column of <code>'CURRENT'</code> inside the corresponding <code>value</code> column. The <code>versions</code> table also stores the initial database version in which the file was created with under the <code>'INITIAL'</code> key. Databases created before this key was introduced will always have <code>'INITIAL'</code> value of <code>100</code>.</p> <pre><code>erDiagram\n  versions {\n    TEXT key PK \"Values: ['INITIAL', 'CURRENT']\"\n    INTEGER value\n  }</code></pre>"},{"location":"library-changes/#versions-1-5","title":"Versions 1 - 5","text":"<p>These versions were used while developing the new SQLite file format, outside any official or recommended release. These versions were never supported in any official capacity and were actively warned against using for real libraries.</p>"},{"location":"library-changes/#version-6","title":"Version 6","text":"Used From Format Location v9.5.0-pr1 SQLite <code>&lt;Library Folder&gt;</code>/.TagStudio/ts_library.sqlite <p>The first public version of the SQLite save file format.</p> <p>Migration from the legacy JSON format is provided via a walkthrough when opening a legacy library in TagStudio v9.5.0 Pre-Release 1 or later.</p>"},{"location":"library-changes/#version-7","title":"Version 7","text":"Used From Format Location v9.5.0-pr2 SQLite <code>&lt;Library Folder&gt;</code>/.TagStudio/ts_library.sqlite <ul> <li>Repairs \"Description\" fields to use a TEXT_LINE key instead of a TEXT_BOX key.</li> <li>Repairs tags that may have a disambiguation_id pointing towards a deleted tag.</li> </ul>"},{"location":"library-changes/#version-8","title":"Version 8","text":"Used From Format Location v9.5.0-pr4 SQLite <code>&lt;Library Folder&gt;</code>/.TagStudio/ts_library.sqlite <ul> <li>Adds the <code>color_border</code> column to the <code>tag_colors</code> table. Used for instructing the secondary color to apply to a tag's border as a new optional behavior.</li> <li>Adds three new default colors: \"Burgundy (TagStudio Shades)\", \"Dark Teal (TagStudio Shades)\", and \"Dark Lavender (TagStudio Shades)\".</li> <li>Updates Neon colors to use the new <code>color_border</code> property.</li> </ul>"},{"location":"library-changes/#version-9","title":"Version 9","text":"Used From Format Location v9.5.2 SQLite <code>&lt;Library Folder&gt;</code>/.TagStudio/ts_library.sqlite <ul> <li>Adds the <code>filename</code> column to the <code>entries</code> table. Used for sorting entries by filename in search results.</li> </ul>"},{"location":"library-changes/#version-100","title":"Version 100","text":"Used From Format Location 74383e3 SQLite <code>&lt;Library Folder&gt;</code>/.TagStudio/ts_library.sqlite <ul> <li>Introduces built-in minor versioning<ul> <li>The version number divided by 100 (and floored) constitutes the major version. Major version indicate breaking changes that prevent libraries from being opened in TagStudio versions older than the ones they were created in.</li> <li>Values more precise than this (\"ones\" through \"tens\" columns) constitute the minor version. These indicate minor changes that don't prevent a newer library from being opened in an older version of TagStudio, as long as the major version is not also increased.</li> </ul> </li> <li>Swaps <code>parent_id</code> and <code>child_id</code> values in the <code>tag_parents</code> table</li> </ul>"},{"location":"library-changes/#version-101","title":"Version 101","text":"Used From Format Location v9.5.4 SQLite <code>&lt;Library Folder&gt;</code>/.TagStudio/ts_library.sqlite <ul> <li>Deprecates the <code>preferences</code> table, set to be removed in a future TagStudio version.</li> <li>Introduces the <code>versions</code> table<ul> <li>Has a string <code>key</code> column and an int <code>value</code> column</li> <li>The <code>key</code> column stores one of two values: <code>'INITIAL'</code> and <code>'CURRENT'</code></li> <li><code>'INITIAL'</code> stores the database version number in which in was created<ul> <li>Pre-existing databases set this number to <code>100</code></li> </ul> </li> <li><code>'CURRENT'</code> stores the current database version number</li> </ul> </li> </ul>"},{"location":"library-changes/#version-102","title":"Version 102","text":"Used From Format Location v9.5.4 SQLite <code>&lt;Library Folder&gt;</code>/.TagStudio/ts_library.sqlite <ul> <li>Applies repairs to the <code>tag_parents</code> table created in version 100, removing rows that reference tags that have been deleted.</li> </ul>"},{"location":"macros/","title":"Tools &amp; Macros","text":"<p>Tools and macros are features that serve to create a more fluid library-managing process, or provide some extra functionality. Please note that some are still in active development and will be fleshed out in future updates.</p>"},{"location":"macros/#tools","title":"Tools","text":""},{"location":"macros/#fix-unlinked-entries","title":"Fix Unlinked Entries","text":"<p>This tool displays the number of unlinked entries, and some options for their resolution.</p> Refresh Scans through the library and updates the unlinked entry count. Search &amp; Relink Attempts to automatically find and reassign missing files. Delete Unlinked Entries Displays a confirmation prompt containing the list of all missing files to be deleted before committing to or cancelling the operation."},{"location":"macros/#fix-duplicate-files","title":"Fix Duplicate Files","text":"<p>This tool allows for management of duplicate files in the library using a DupeGuru file.</p> Load DupeGuru File load the \"results\" file created from a DupeGuru scan Mirror Entries Duplicate entries will have their contents mirrored across all instances. This allows for duplicate files to then be deleted with DupeGuru as desired, without losing the field data that has been assigned to either. (Once deleted, the \"Fix Unlinked Entries\" tool can be used to clean up the duplicates)"},{"location":"macros/#create-collage","title":"Create Collage","text":"<p>This tool is a preview of an upcoming feature. When selected, TagStudio will generate a collage of all the contents in a Library, which can be found in the Library folder (\"/your-folder/.TagStudio/collages/\"). Note that this feature is still in early development, and doesn't yet offer any customization options.</p>"},{"location":"macros/#macros","title":"Macros","text":""},{"location":"macros/#auto-fill-wip","title":"Auto-fill [WIP]","text":"<p>Tool is in development and will be documented in a future update.</p>"},{"location":"macros/#sort-fields","title":"Sort fields","text":"<p>Tool is in development. Will allow for user-defined sorting of fields.</p>"},{"location":"macros/#folders-to-tags","title":"Folders to Tags","text":"<p>Creates tags from the existing folder structure in the library, which are previewed in a hierarchy view for the user to confirm. A tag will be created for each folder and applied to all entries, with each subfolder being linked to the parent folder as a parent tag. Tags will initially be named after the folders, but can be fully edited and customized afterwards.</p>"},{"location":"preview-support/","title":"Supported Previews","text":"<p>TagStudio offers built-in preview and thumbnail support for a wide variety of file types. Files that don't have explicit support can still be added to your library like normal, they will just show a default icon for thumbnails and previews. TagStudio also references the file's MIME type in an attempt to render previews for file types that haven't gained explicit support yet.</p>"},{"location":"preview-support/#images","title":"Images","text":"<p>Images will generate thumbnails the first time they are viewed or since the last time they were modified. Thumbnails are used in the grid view, but not in the Preview Panel. Animated images will play in the Preview Panel.</p> Filetype Extensions Animation Animated PNG <code>.apng</code> Apple Icon Image <code>.icns</code> AVIF <code>.avif</code> Bitmap <code>.bmp</code> GIF <code>.gif</code> HEIF <code>.heif</code>, <code>.heic</code> JPEG <code>.jpeg</code>, <code>.jpg</code>, <code>.jfif</code>, <code>.jif</code>, <code>.jpg_large</code><sup>1</sup> JPEG-XL <code>.jxl</code> OpenEXR <code>.exr</code> OpenRaster <code>.ora</code> PNG <code>.png</code> SVG <code>.svg</code> TIFF <code>.tiff</code>, <code>.tif</code> Valve Texture Format <code>.vtf</code> WebP <code>.webp</code> Windows Icon <code>.ico</code>"},{"location":"preview-support/#raw-images","title":"RAW Images","text":"Filetype Extensions Camera Image File Format (Canon) <code>.crw</code>, <code>.cr2</code>, <code>.cr3</code> Digital Negative <code>.dng</code> Fuji RAW <code>.raf</code> Nikon RAW <code>.nef</code>, <code>.nrw</code> Olympus RAW <code>.orf</code> Panasonic RAW <code>.raw</code>, <code>.rw2</code> Sony RAW <code>.arw</code>"},{"location":"preview-support/#videos","title":"Videos","text":"<p>Video thumbnails will default to the closest viable frame from the middle of the video. Both thumbnail generation and video playback in the Preview Panel requires FFmpeg installed on your system.</p> Filetype Extensions Dependencies 3GP <code>.3gp</code> FFmpeg AVI <code>.avi</code> FFmpeg AVIF <code>.avif</code> FFmpeg FLV <code>.flv</code> FFmpeg HEVC <code>.hevc</code> FFmpeg Matroska <code>.mkv</code> FFmpeg MP4 <code>.mp4</code> , <code>.m4p</code> FFmpeg MPEG Transport Stream <code>.ts</code> FFmpeg QuickTime <code>.mov</code>, <code>.movie</code>, <code>.qt</code> FFmpeg WebM <code>.webm</code> FFmpeg WMV <code>.wmv</code> FFmpeg"},{"location":"preview-support/#audio","title":"Audio","text":"<p>Audio thumbnails will default to embedded cover art (if any) and fallback to generated waveform thumbnails. Audio file playback is supported in the Preview Panel if you have FFmpeg installed on your system. Audio waveforms are currently not cached.</p> Filetype Extensions Dependencies AAC <code>.aac</code>, <code>.m4a</code> FFmpeg AIFF <code>.aiff</code>, <code>.aif</code>, <code>.aifc</code> FFmpeg Apple Lossless<sup>2</sup> <code>.alac</code>, <code>.aac</code> FFmpeg FLAC <code>.flac</code> FFmpeg MP3 <code>.mp3</code> FFmpeg Ogg <code>.ogg</code> FFmpeg WAVE <code>.wav</code>, <code>.wave</code> FFmpeg Windows Media Audio <code>.wma</code> FFmpeg"},{"location":"preview-support/#documents","title":"Documents","text":"<p>Preview support for office documents or well-known project file formats varies by the format and whether or not embedded thumbnails are available to be read from. OpenDocument-based files are typically supported.</p> Filetype Extensions Preview Type Blender <code>.blend</code>, <code>.blend&lt;#&gt;</code> Embedded thumbnail  Keynote (Apple iWork) <code>.key</code> Embedded thumbnail Krita<sup>3</sup> <code>.kra</code>, <code>.krz</code> Embedded thumbnail  MuseScore <code>.mscz</code> Embedded thumbnail  Numbers (Apple iWork) <code>.numbers</code> Embedded thumbnail OpenDocument Presentation <code>.odp</code>, <code>.fodp</code> Embedded thumbnail OpenDocument Spreadsheet <code>.ods</code>, <code>.fods</code> Embedded thumbnail OpenDocument Text <code>.odt</code>, <code>.fodt</code> Embedded thumbnail Pages (Apple iWork) <code>.pages</code> Embedded thumbnail PDF <code>.pdf</code> First page render Photoshop <code>.psd</code> Flattened image render PowerPoint (Microsoft Office) <code>.pptx</code>, <code>.ppt</code> Embedded thumbnail"},{"location":"preview-support/#ebooks","title":"eBooks","text":"Filetype Extensions Preview Type EPUB <code>.epub</code> Embedded cover Comic Book Archive <code>.cbr</code>, <code>.cbt</code> <code>.cbz</code> Embedded cover or first page"},{"location":"preview-support/#3d-models","title":"3D Models","text":"<p>3D Model Support</p> <p>TagStudio does not currently support previews for 3D model files (outside of Blender project embedded thumbnails). This is on our roadmap for a future release.</p>"},{"location":"preview-support/#fonts","title":"Fonts","text":"<p>Font thumbnails will use a \"Aa\" example preview of the font, with a full alphanumeric of the font available in the Preview Panel.</p> Filetype Extensions OpenType Font <code>.otf</code>, <code>.otc</code> TrueType Font <code>.ttf</code>, <code>.ttc</code> Web Open Font Format <code>.woff</code>, <code>.woff2</code>"},{"location":"preview-support/#text","title":"Text","text":"<p>Plain Text Support</p> <p>TagStudio supports the vast majority of files considered to be \"plain text\". If an extension or format is not listed here, odds are it's still supported anyway.</p> <p>Text files render the first 256 bytes of text information to an image preview for thumbnails and the Preview Panel. Improved thumbnails, full scrollable text, and syntax highlighting are on our roadmap for future features.</p> Filetype Extensions Syntax Highlighting CSV <code>.csv</code> HTML <code>.html</code>, <code>.htm</code>, <code>.xhtml</code>, <code>.shtml</code>, <code>.dhtml</code> JSON <code>.json</code>, <code>.jsonc</code>, <code>.json5</code> Markdown <code>.md</code>, <code>.markdown</code>, <code>.mkd</code>, <code>.rmd</code> Plain Text <code>.txt</code>, <code>.text</code> TOML <code>.toml</code> XML <code>.xml</code>, <code>.xul</code> YAML <code>.yaml</code>, <code>.yml</code> <ol> <li> <p>The <code>.jpg_large</code> extension is unofficial and instead the byproduct of how Google Chrome used to download images from Twitter. Since this mangled extension is still in circulation, TagStudio supports it.\u00a0\u21a9</p> </li> <li> <p>Apple Lossless traditionally uses <code>.m4a</code> and <code>.caf</code> containers, but may unofficially use the <code>.alac</code> extension. The <code>.m4a</code> container is also used for separate compressed audio codecs.\u00a0\u21a9</p> </li> <li> <p>Krita also supports saving projects as OpenRaster <code>.ora</code> files. Support for these is listed in the \"Images\" section.\u00a0\u21a9</p> </li> </ol>"},{"location":"roadmap/","title":"Roadmap","text":"<p>This page outlines the current and planned features required for TagStudio to be considered \"feature complete\" (v10.0.0). Features and changes are broken up by group in order to better assess the overall state of those features. Priority levels and version estimates are provided in order to give a rough idea of what's planned and when it may release.</p> <p>This roadmap will update as new features are planned or completed. If there's a feature you'd like to see but is not listed on this page, please check the GitHub Issues page and submit a feature request if one does not already exist!</p>"},{"location":"roadmap/#priority-levels","title":"Priority Levels","text":"<p>Planned features and changes are assigned priority levels to signify how important they are to the feature-complete version of TagStudio and to serve as a general guide for what should be worked on first, along with version estimates. When features are completed, their priority level icons are removed.</p> <p>Priority Level Icons</p> <ul> <li> High Priority - Core features</li> <li> Medium Priority - Important, but not necessary</li> <li> Low Priority - Just nice to have</li> </ul>"},{"location":"roadmap/#version-estimates","title":"Version Estimates","text":"<p>Features are given rough estimations for which version they will be completed in, and are listed next to their names (e.g. Feature [v9.0.0]). They are eventually replaced with links to the version changelog in which they were completed in, if applicable.</p> <p>Tip</p> <p>For a more definitive and up-to-date list of features planned for near-future updates, please reference the current GitHub Milestones!</p>"},{"location":"roadmap/#core","title":"Core","text":""},{"location":"roadmap/#sql-library-database","title":"SQL Library Database","text":"<p>An improved SQLite-based library save file format in which legacy JSON libraries are be migrated to. Must be finalized or deemed \"feature complete\" before other core features are developed or finalized.</p> <p>Note</p> <p>See the \"Library\" section for features related to the library database rather than the underlying schema.</p> <ul> <li> A SQLite-based library save file format [v9.5.0]</li> <li> Cached File Properties Table  [v9.6.x]<ul> <li> Date Entry Added to Library </li> <li> Date File Created </li> <li> Date File Modified </li> <li> Date Photo Taken </li> <li> Media Duration </li> <li> Media Dimensions </li> <li> Word Count </li> </ul> </li> </ul>"},{"location":"roadmap/#core-library-api","title":"Core Library + API","text":"<p>A separated, UI agnostic core library that would be used to interface with the TagStudio library format. Would host an API for communication from outside the program. This would be licensed under the more permissive MIT license to foster wider adoption compared to the TagStudio application source code.</p> <ul> <li> Core Library  [v10.0.0]</li> <li> Core Library API  [v10.0.0]</li> <li> MIT License  [v10.0.0]</li> </ul>"},{"location":"roadmap/#format-specification","title":"Format Specification","text":"<p>A detailed written specification for the TagStudio tag and/or library format. Intended for used by third-parties to build alternative cores or protocols that can remain interoperable.</p> <ul> <li> Format Specification Established  [v10.0.0]</li> </ul>"},{"location":"roadmap/#application","title":"Application","text":""},{"location":"roadmap/#uiux","title":"UI/UX","text":"<ul> <li> Library Grid View<ul> <li> Explore Filesystem in Grid View </li> <li> Infinite Scrolling (No Pagination) </li> </ul> </li> <li> Library List View <ul> <li> Explore Filesystem in List View </li> </ul> </li> <li> Lightbox View <ul> <li>Similar to List View in concept, but displays one large preview that can cycle back/forth between entries.</li> <li> Smaller thumbnails of immediate adjacent entries below </li> </ul> </li> <li> Library Statistics Screen [v9.5.4]</li> <li> Unified Library Health/Cleanup Screen [v9.5.4]<ul> <li> Fix Unlinked Entries</li> <li> Fix Duplicate Files</li> <li> Fix Duplicate Entries</li> <li> Remove Ignored Entries [v9.5.4]</li> <li> Delete Old Backups [v9.5.4]</li> <li> Delete Legacy JSON File [v9.5.4]</li> </ul> </li> <li> Translations</li> <li> Search Bar Rework  [v9.7.x]<ul> <li> Improved Tag Autocomplete </li> <li> Tags appear as widgets in search bar </li> </ul> </li> <li> Unified Media Player<ul> <li> Auto-Hiding Player Controls</li> <li> Play/Pause</li> <li> Loop</li> <li> Toggle Autoplay</li> <li> Volume Control</li> <li> Toggle Mute</li> <li> Timeline scrubber</li> <li> Fullscreen </li> <li> Fine-Tuned UI/UX  [v9.6]</li> </ul> </li> <li> 3D Model Thumbnails/Previews <ul> <li> STL File Support</li> <li> OBJ File Support</li> </ul> </li> <li> Plaintext Thumbnails/Previews <ul> <li> Basic Support</li> <li> Full File Preview </li> <li> Syntax Highlighting </li> </ul> </li> <li> Toggleable Persistent Tagging Panel <ul> <li> Top Tags</li> <li> Recent Tags</li> <li> Tag Search</li> <li> Pinned Tags</li> </ul> </li> <li> New Tabbed Tag Building UI to Support New Tag Features  [v9.6.x]</li> <li> Custom Thumbnail Overrides </li> <li> Media Duration Labels  [v9.6.x]</li> <li> Word/Line Count Labels </li> <li> Custom Tag Badges <ul> <li>Would serve as an addition/alternative to the Favorite and Archived badges.</li> </ul> </li> </ul>"},{"location":"roadmap/#settings","title":"Settings","text":"<ul> <li> Application Settings<ul> <li> Stored in System User Folder/Designated Folder</li> <li> Language</li> <li> Date and Time Format</li> <li> Theme</li> <li> Thumbnail Generation [v9.5.4]</li> </ul> </li> <li> Configurable Page Size</li> <li> Library Settings <ul> <li> Stored in <code>.TagStudio</code> folder </li> </ul> </li> <li> Toggle File Extension Label </li> <li> Toggle Duration Label </li> </ul>"},{"location":"roadmap/#plugin-support","title":"Plugin Support","text":"<p>Some form of official plugin support for TagStudio, likely with its own API that may connect to or encapsulate part of the the core library API.</p> <ul> <li> Plugin Support  [v10.0.0]</li> </ul>"},{"location":"roadmap/#library","title":"Library","text":""},{"location":"roadmap/#library-mechanics","title":"Library Mechanics","text":"<ul> <li> Per-Library Tags</li> <li> Global Tags </li> <li> Multiple Root Directories  [v9.6.x]<ul> <li> Ability to store TagStudio library folder separate from library files  [v9.6.x]</li> </ul> </li> <li> Automatic Entry Relinking  [v9.7.x]<ul> <li> Detect Renames </li> <li> Detect Moves </li> <li> Detect Deletions </li> <li> Performant </li> </ul> </li> <li> Background File Scanning  [v9.7.x]</li> <li> Thumbnail Caching [v9.5.0]<ul> <li> Audio Waveform Caching  [v9.7.x]</li> </ul> </li> </ul>"},{"location":"roadmap/#entries","title":"Entries","text":"<p>Library representations of files or file-like objects.</p> <ul> <li> File Entries [v1.0.0]</li> <li> Folder Entries </li> <li> URL Entries / Bookmarks </li> <li> Fields<ul> <li> Text Lines</li> <li> Text Boxes</li> <li> Datetimes [v9.5.4]</li> <li> User-Titled Fields  [v9.6.x]<ul> <li> Removal of Deprecated Fields  [v9.6.x]</li> </ul> </li> </ul> </li> <li> Entry Groups  [v9.7.x]<ul> <li> Non-exclusive; Entries can be in multiple groups </li> <li> Ability to number entries within group </li> <li> Ability to set sorting method for group </li> <li> Ability to set custom thumbnail for group </li> <li> Group is treated as entry with tags and metadata </li> <li> Nested groups </li> </ul> </li> </ul>"},{"location":"roadmap/#tags","title":"Tags","text":"<p>Discrete library objects representing attributes. Can be applied to library entries, or applied to other tags to build traversable relationships.</p> <ul> <li> Tag Name [v8.0.0]</li> <li> Tag Shorthand Name [v8.0.0]</li> <li> Tag Aliases List [v8.0.0]</li> <li> Tag Color [v8.0.0]</li> <li> Tag Description  [v9.6.x]</li> <li> Tag Colors<ul> <li> Built-in Color Palette [v8.0.0]</li> <li> User-Defined Colors [v9.5.0]</li> <li> Primary and Secondary Colors [v9.5.0]</li> </ul> </li> <li> Tag Icons  [v9.6.x]<ul> <li> Small Icons  [v9.6.x]</li> <li> Large Icons for Profiles  [v9.6.x]</li> <li> Built-in Icon Packs (i.e. Boxicons)  [v9.6.x]</li> <li> User-Defined Icons  [v9.6.x]</li> </ul> </li> <li> Category Property [v9.5.0]<ul> <li> Property available for tags that allow the tag and any inheriting from it to be displayed separately in the preview panel under a title</li> <li> Fine-tuned exclusion from categories  [v9.6.x]</li> </ul> </li> <li> Hidden Property  [v9.6.x]<ul> <li> Built-in \"Archived\" tag has this property by default  [v9.6.x]</li> <li> Checkbox near search bar to show hidden tags in search  [v9.6.x]</li> </ul> </li> <li> Tag Relationships<ul> <li> Parent Tags (Inheritance Relationship) [v9.0.0]</li> <li> Component Tags (Composition Relationship)  [v9.6.x]</li> </ul> </li> <li> Multiple Language Support  [v9.9.x]</li> <li> Tag Overrides </li> <li> Tag Merging </li> </ul>"},{"location":"roadmap/#search","title":"Search","text":"<ul> <li> Tag Search [v8.0.0]</li> <li> Filename Search [v9.5.0]<ul> <li> Glob Search [v9.5.0]</li> </ul> </li> <li> Filetype Search [v9.5.0]<ul> <li> Search by Extension (e.g. \".jpg\", \".png\") [v9.5.0]<ul> <li> Optional consolidation of extension synonyms (i.e. \".jpg\" can equal \".jpeg\") [v9.5.0]</li> </ul> </li> <li> Search by media type (e.g. \"image\", \"video\", \"document\") [v9.5.0]</li> </ul> </li> <li> Field Content Search  [v9.6.x]</li> <li> Boolean Operators [v9.5.0]<ul> <li> <code>AND</code> Operator</li> <li> <code>OR</code> Operator</li> <li> <code>NOT</code> Operator</li> <li> Parenthesis Grouping</li> <li> Character Escaping</li> </ul> </li> <li> <code>HAS</code> Operator (for Component Tags)  [v9.6.x]</li> <li> Conditional Search  [v9.7.x]<ul> <li> Compare Dates </li> <li> Compare Durations </li> <li> Compare File Sizes </li> <li> Compare Dimensions </li> </ul> </li> <li> Smartcase Search [v9.5.0]</li> <li> Search Result Sorting<ul> <li> Sort by Filename [v9.5.2]</li> <li> Sort by Date Entry Added to Library [v9.5.2]</li> <li> Sort by File Creation Date  [v9.6.x]</li> <li> Sort by File Modification Date  [v9.6.x]</li> <li> Sort by File Modification Date </li> <li> Sort by Date Taken (Photos)  [v9.6.x]</li> <li> Random/Shuffle Sort</li> </ul> </li> <li> OCR Search </li> <li> Fuzzy Search </li> </ul>"},{"location":"roadmap/#macros","title":"Macros","text":"<ul> <li> Standard, Human Readable Format (TOML)  [v9.5.x]</li> <li> Versioning System  [v9.5.x]</li> <li> Triggers [v9.5.x]<ul> <li> On File Added </li> <li> On Library Refresh </li> <li> [...]</li> </ul> </li> <li> Actions [v9.5.x]<ul> <li> Add Tag(s) </li> <li> Add Field(s) </li> <li> Set Field Content </li> <li> [...]</li> </ul> </li> </ul>"},{"location":"roadmap/#sharable-data","title":"Sharable Data","text":"<p>Sharable TagStudio library data in the form of data packs (tags, colors, etc.) or other formats. Packs are intended as an easy way to import and export specific data between libraries and users, while export-only formats are intended to be imported by other programs.</p> <ul> <li> Color Packs  [v9.5.x]<ul> <li> Importable</li> <li> Exportable</li> <li> UUIDs + Namespaces </li> <li> Standard, Human Readable Format (TOML) </li> <li> Versioning System </li> </ul> </li> <li> Tag Packs  [v9.9.x]<ul> <li> Importable </li> <li> Exportable </li> <li> UUIDs + Namespaces </li> <li> Standard, Human Readable Format (TOML) </li> <li> Versioning System </li> </ul> </li> <li> Macro Sharing  [v9.5.x]<ul> <li> Importable </li> <li> Exportable </li> </ul> </li> <li> Sharable Entry Data  [v9.9.x]<ul> <li>Specifics of this are yet to be determined</li> </ul> </li> <li> Export Library to Human Readable Format  [v10.0.0]<ul> <li>Intended to give users more flexible options with their data if they wish to migrate away from TagStudio</li> </ul> </li> </ul>"},{"location":"search/","title":"Searching","text":"<p>TagStudio provides various methods to search your library, ranging from TagStudio data such as tags to inherent file data such as paths or media types.</p>"},{"location":"search/#boolean-operators","title":"Boolean Operators","text":"<p>TagStudio allows you to use common Boolean search operators when searching your library, along with grouping, nesting, and character escaping. Note that you may need to use grouping in order to get the desired results you're looking for.</p>"},{"location":"search/#and","title":"AND","text":"<p>The <code>AND</code> operator will only return results that match both sides of the operator. <code>AND</code> is used implicitly when no Boolean operators are given. To use the <code>AND</code> operator explicitly, simply type \"and\" (case insensitive) in-between items of your search.</p> <p>Example</p> <p>Searching for \"Tag1 Tag2\" will be treated the same as \"Tag1 <code>AND</code> Tag2\" and will only return results that contain both Tag1 and Tag2.</p>"},{"location":"search/#or","title":"OR","text":"<p>The <code>OR</code> operator will return results that match either the left or right side of the operator. To use the <code>OR</code> operator simply type \"or\" (case insensitive) in-between items of your search.</p> <p>Example</p> <p>Searching for \"Tag1 <code>OR</code> Tag2\" will return results that contain either \"Tag1\", \"Tag2\", or both.</p>"},{"location":"search/#not","title":"NOT","text":"<p>The <code>NOT</code> operator will returns results where the condition on the right is false. To use the <code>NOT</code> operator simply type \"not\" (case insensitive) in-between items of your search. You can also begin your search with <code>NOT</code> to only view results that do not contain the next term that follows.</p> <p>Example</p> <p>Searching for \"Tag1 <code>NOT</code> Tag2\" will only return results that contain \"Tag1\" while also not containing \"Tag2\".</p>"},{"location":"search/#grouping-and-nesting","title":"Grouping and Nesting","text":"<p>Searches can be grouped and nested by using parentheses to surround parts of your search query.</p> <p>Example</p> <p>Searching for \"(Tag1 <code>OR</code> Tag2) <code>AND</code> Tag3\" will return any results that contain Tag3, plus one or the other (or both) of Tag1 and Tag2.</p>"},{"location":"search/#escaping-characters","title":"Escaping Characters","text":"<p>Sometimes search queries have ambiguous characters and need to be \"escaped\". This is most common with tag names which contain spaces, or overlap with existing search keywords such as \"path: of exile\". To escape most search terms, surround the section of your search in plain quotes. Alternatively, spaces in tag names can be replaced by underscores.</p>"},{"location":"search/#valid-escaped-tag-searches","title":"Valid Escaped Tag Searches","text":"<ul> <li>\"Tag Name With Spaces\"</li> <li>Tag_Name_With_Spaces</li> </ul>"},{"location":"search/#invalid-escaped-tag-searches","title":"Invalid Escaped Tag Searches","text":"<ul> <li>Tag Name With Spaces<ul> <li>Reason: Ambiguity between a tag named \"Tag Name With Spaces\" and four individual tags called \"Tag\", \"Name\", \"With\", \"Spaces\".</li> </ul> </li> </ul>"},{"location":"search/#tags","title":"Tags","text":"<p>Tag search is the default mode of file entry search in TagStudio. No keyword prefix is required, however using <code>tag:</code> will also work. The tag search attempts to match tag names, shorthands, aliases, as well as allows for tags to substitute in for any of their parent tags.</p> <p>You may also see the <code>tag_id:</code> prefix keyword show up when using the right-click \"Search for Tag\" option on tags. This is meant for internal use, and eventually will not be displayed or accessible to the user.</p>"},{"location":"search/#fields","title":"Fields","text":"<p>Field search is currently not in the program, however is coming in a future version.</p>"},{"location":"search/#file-entry-search","title":"File Entry Search","text":""},{"location":"search/#filename-and-path","title":"Filename and Path","text":"<p>Filename and path search is available via the <code>path:</code> keyword and comes in a few different styles. By default, any string that follows the <code>path:</code> keyword will be searched as a substring inside a file's complete filepath. This means that given a file <code>folder/my_file.txt</code>, searching for <code>path: my_file</code> or <code>path: folder</code> will both return results for that file.</p>"},{"location":"search/#case-sensitivity","title":"Case Sensitivity","text":"<p>TagStudio uses a \"smartcase\"-like system for case sensitivity. This means that a search term typed in <code>lowercase</code> will be treated as case-insensitive, while a term typed in any <code>MixedCase</code> will be treated as case-sensitive. This makes it quicker to type searches when case sensitivity isn't required, while also providing a simple option to leverage case sensitivity when desired. Note that this means there's technically no way to currently search for a lowercase term while respecting case sensitivity.</p>"},{"location":"search/#glob-syntax","title":"Glob Syntax","text":"<p>Optionally, you may use glob syntax to search filepaths.</p>"},{"location":"search/#examples","title":"Examples","text":"<p>Given a file \"Artwork/Piece.jpg\", the following searches will return results for it:</p> <ul> <li><code>path: artwork/piece.jpg</code></li> <li><code>path: Artwork/Piece.jpg</code></li> <li><code>path: piece.jpg</code></li> <li><code>path: Piece.jpg</code></li> <li><code>path: artwork</code></li> <li><code>path: rtwor</code></li> <li><code>path: ece.jpg</code></li> <li><code>path: iec</code></li> <li><code>path: artwork/*</code></li> <li><code>path: Artwork/*</code></li> <li><code>path: *piece.jpg*</code></li> <li><code>path: *Piece.jpg*</code></li> <li><code>path: *artwork*</code></li> <li><code>path: *Artwork*</code></li> <li><code>path: *rtwor*</code></li> <li><code>path: *ece.jpg*</code></li> <li><code>path: *iec*</code></li> <li><code>path: *.jpg</code></li> </ul> <p>While the following searches will NOT:</p> <ul> <li><code>path: ARTWORK/Piece.jpg</code> (Reason: Mismatched case)</li> <li><code>path: *aRtWoRk/Piece*</code> (Reason: Mismatched case)</li> <li><code>path: PieCe.jpg</code> (Reason: Mismatched case)</li> <li><code>path: *PieCe.jpg*</code> (Reason: Mismatched case)</li> </ul>"},{"location":"search/#special-searches","title":"Special Searches","text":"<p>Some predefined searches use the <code>special:</code> keyword prefix and give quick results for certain special search queries.</p>"},{"location":"search/#untagged","title":"Untagged","text":"<p>To see all your file entries which don't contain any tags, use the <code>special: untagged</code> search.</p>"},{"location":"search/#empty","title":"Empty","text":"<p>NOTE: Currently unavailable in v9.5.0</p> <p>To see all your file entries which don't contain any tags and any fields, use the <code>special: empty</code> search.</p>"},{"location":"style/","title":"Style Guide","text":""},{"location":"style/#formatting","title":"Formatting","text":"<p>Most of the style guidelines can be checked, fixed, and enforced via Ruff. Older code may not be adhering to all of these guidelines, in which case \"do as I say, not as I do\"...</p> <ul> <li>Do your best to write clear, concise, and modular code.<ul> <li>This should include making methods private by default (e.g. <code>__method()</code>)</li> <li>Methods should only be protected (e.g. <code>_method()</code>) or public (e.g. <code>method()</code>) when needed and warranted</li> </ul> </li> <li>Keep a maximum column width of no more than 100 characters.</li> <li>Code comments should be used to help describe sections of code that can't speak for themselves.</li> <li>Use Google style docstrings for any classes and functions you add.<ul> <li>If you're modifying an existing function that does not have docstrings, you don't have to add docstrings to it... but it would be pretty cool if you did ;)</li> </ul> </li> <li>Imports should be ordered alphabetically.</li> <li>Lists of values should be ordered using their natural sort order.<ul> <li>Some files have their methods ordered alphabetically as well (i.e. <code>thumb_renderer</code>). If you're working in a file and notice this, please try and keep to the pattern.</li> </ul> </li> <li>When writing text for window titles or form titles, use \"Title Case\" capitalization. Your IDE may have a command to format this for you automatically, although some may incorrectly capitalize short prepositions. In a pinch you can use a website such as capitalizemytitle.com to check.</li> <li>If it wasn't mentioned above, then stick to PEP-8!</li> </ul>"},{"location":"style/#qt","title":"Qt","text":"<p>As of writing this section, the QT part of the code base is quite unstructured and the View and Controller parts are completely intermixed<sup>1</sup>. This makes maintenance, fixes and general understanding of the code base quite challenging, because the interesting parts you are looking for are entangled in a bunch of repetitive UI setup code. To address this we are aiming to more strictly separate the view and controller aspects of the QT frontend.</p> <p>The general structure of the QT code base should look like this:</p> <pre><code>qt\n\u251c\u2500\u2500 controllers\n\u2502   \u251c\u2500\u2500 widgets\n\u2502   \u2502   \u2514\u2500\u2500 preview_panel_controller.py\n\u2502   \u2514\u2500\u2500 main_window_controller.py\n\u251c\u2500\u2500 views\n\u2502   \u251c\u2500\u2500 widgets\n\u2502   \u2502   \u2514\u2500\u2500 preview_panel_view.py\n\u2502   \u2514\u2500\u2500 main_window_view.py\n\u251c\u2500\u2500 ts_qt.py\n\u2514\u2500\u2500 mixed.py\n</code></pre> <p>In this structure there are the <code>views</code> and <code>controllers</code> sub-directories. They have the exact same structure and for every <code>&lt;component&gt;_view.py</code> there is a <code>&lt;component&gt;_controller.py</code> at the same location in the other subdirectory and vice versa.</p> <p>Typically the classes should look like this:</p> <pre><code># my_cool_widget_view.py\nclass MyCoolWidgetView(QWidget):\n    def __init__(self):\n        super().__init__()\n        self.__button = QPushButton()\n        self.__color_dropdown = QComboBox()\n        # ...\n        self.__connect_callbacks()\n\n    def __connect_callbacks(self):\n        self.__button.clicked.connect(self._button_click_callback)\n        self.__color_dropdown.currentIndexChanged.connect(\n            lambda idx: self._color_dropdown_callback(self.__color_dropdown.itemData(idx))\n        )\n\n    def _button_click_callback(self):\n        raise NotImplementedError()\n</code></pre> <pre><code># my_cool_widget_controller.py\nclass MyCoolWidget(MyCoolWidgetView):\n    def __init__(self):\n        super().__init__()\n\n    def _button_click_callback(self):\n        print(\"Button was clicked!\")\n\n    def _color_dropdown_callback(self, color: Color):\n        print(f\"The selected color is now: {color}\")\n</code></pre> <p>Observe the following key aspects of this example:</p> <ul> <li>The Controller is just called <code>MyCoolWidget</code> instead of <code>MyCoolWidgetController</code> as it will be directly used by other code</li> <li>The UI elements are in private variables<ul> <li>This enforces that the controller shouldn't directly access UI elements</li> <li>Instead the view should provide a protected API (e.g. <code>_get_color()</code>) for things like setting/getting the value of a dropdown, etc.</li> <li>Instead of <code>_get_color()</code> there could also be a <code>_color</code> method marked with <code>@property</code></li> </ul> </li> <li>The callback methods are already defined as protected methods with NotImplementedErrors<ul> <li>Defines the interface the callbacks</li> <li>Enforces that UI events be handled</li> </ul> </li> </ul> <p>Tip</p> <p>A good (non-exhaustive) rule of thumb is: If it requires a non-UI import, then it doesn't belong in the <code>*_view.py</code> file.</p> <ol> <li> <p>For an explanation of the Model-View-Controller (MVC) Model, checkout this article: MVC Framework Introduction.\u00a0\u21a9</p> </li> </ol>"},{"location":"tags/","title":"Tags","text":"<p>Tags are discrete objects that represent some attribute. This could be a person, place, object, concept, and more. Unlike most tagging systems, TagStudio tags are not solely represented by a line of text or a hashtag. Tags in TagStudio consist of several properties and relationships that give extra customization, searching power, and ease of tagging that cannot be achieved by string-based tags alone. TagStudio tags are designed to be as simple or as complex as you'd like, giving options to users of all skill levels and use cases.</p>"},{"location":"tags/#naming-tags","title":"Naming Tags","text":"<p>TagStudio tags do not share the same naming limitations of many other tagging solutions. The key standouts of tag names in TagStudio are:</p> <ul> <li>Tag names do NOT have to be unique</li> <li>Tag names are NOT limited to specific characters</li> <li>Tags can have aliases, a.k.a. alternate names to go by</li> </ul>"},{"location":"tags/#name","title":"Name","text":"<p>This is the base name of a tag. It does not have to be unique, and can use any characters you wish. If your tag can go by multiple names, for example if it's the name of a person or something that's commonly shortened or abbreviated, then it's recommended that you put the full tag name here.</p>"},{"location":"tags/#shorthand","title":"Shorthand","text":"<p>This is a special type of alias that's used for shortening the tag name under special circumstances, mostly when screen space is limited. Tag shorthands can be searched for just like tag names and tag aliases.</p>"},{"location":"tags/#aliases","title":"Aliases","text":"<p>Aliases are alternate names that the tag can go by. This may include individual first names for people, alternate spellings, shortened names, and more. If there's a common abbreviation or shortened name for your tag, it's recommended to use the shorthand field for this instead.</p> <p>When searching for a tag, aliases (including the shorthand) can also be used to find the tag. This not only includes searching for tags themselves, but for tagged file entries as well!</p>"},{"location":"tags/#disambiguation","title":"Disambiguation","text":"<p>Just as in real life, sometimes there are different attributes that share the same name with one another. The process of adding specificity to something in order to not confuse it with something similar is known as disambiguation. In TagStudio we give the option to automatically disambiguate tag names based on a specially marked Parent Tag. Parent tags are explained in further detail below, but for the purposes of tag names they can lend themselves to clarifying the name of a tag without the user needing to manually change the name or add complicated aliases.</p> <p>Given a tag named \"Freddy\", we may confuse it with other \"Freddy\" tags in our library. There are lots of Freddys in the world, after all. If we're talking about Freddy from \"Five Nights at Freddy's\", then we may already (and likely should) have a separate \"Five Nights at Freddy's\" tag added as a parent tag. When the disambiguation box next to a parent tag is selected (see image below) then our tag name will automatically display its name with that parent tag's name (or shorthand if available) in parentheses.</p> <p></p> <p>So if the \"Five Nights at Freddy's\" tag is added as a parent tag on the \"Freddy\" tag, and the disambiguation box next to it is checked, then our tag name will automatically be displayed as \"Freddy (Five Nights at Freddy's)\". Better yet, if the \"Five Nights at Freddy's\" tag has a shorthand such as \"FNAF\", then our \"Freddy\" tag will be displayed as \"Freddy (FNAF)\". This process preserves our base tag name (\"Freddy\") and provides an option to get a clean and consistent method to display disambiguating parent categories, rather than having to type this information in manually for each applicable tag.</p>"},{"location":"tags/#tag-relationships","title":"Tag Relationships","text":"<p>One of the core properties of tags in TagStudio is their ability to form relationships with other tags, just as attributes have relationships with each other in real life. A rectangle is a square, but a square isn't a rectangle. A certain plumber with a red hat and blue overalls might be part of a well-known media franchise, developed by an equally well-known company. But how do representing these relationships help with tagging images and files? With tag relationships, we can leverage the following principles:</p> <ol> <li>Simplicity via Deduplication</li> <li>Intuition via Substitution</li> <li>Rediscovery via Linking</li> </ol>"},{"location":"tags/#parent-tags","title":"Parent Tags","text":""},{"location":"tags/#simplicity-via-deduplication","title":"Simplicity via Deduplication","text":"<p>In a system where tags have no relationships, you're required to add as many tags as you possibly can to describe every last element of an image or file. If you want to tag an image of Shrek, you need to add a tag for <code>Shrek</code> himself, a <code>Character</code> tag since he's a character, a <code>Movie</code> and perhaps <code>Dreamworks</code> tag since he's a character from a movie, or perhaps a <code>Book</code> tag if we're talking about the original character, and then of course tags for every other attribute of Shrek shown or implied. By allowing tags to have inheritance relationships, we can have a single <code>Shrek</code> tag inherit from <code>Character</code> (Shrek IS a character) as well as from a separate <code>Shrek (Movie Franchise)</code> tag that itself inherits from <code>Movie Franchise</code> and <code>Dreamworks</code>. Now by simply adding the <code>Shrek</code> tag to an image, we've effectively also added the <code>Character</code>, <code>Shrek (Move Franchise)</code>, <code>Movie Franchise</code>, and <code>Dreamworks</code> attributes all in one go. On the image entry itself we only see <code>Shrek</code>, but the rest of the attributes are implied.</p> <p></p>"},{"location":"tags/#intuition-via-substitution","title":"Intuition via Substitution","text":"<p>Now when searching for images that have <code>Dreamworks</code> and <code>Character</code>, any images or files originally just tagged with <code>Shrek</code> will appear as you would expect. A little bit of tag setup goes a long way not only saving so much time during tagging, but also to ensure an intuitive way to search your files!</p>"},{"location":"tags/#rediscovery-via-linking","title":"Rediscovery via Linking","text":"<p>Lastly, when searching your files with broader categories such as <code>Character</code> or <code>Dreamworks</code> you may rediscover images and files that you had simply tagged with tags such as <code>Barbatus</code> or <code>Tulio</code>, since you didn't need to manually tag those files with <code>Character</code> or <code>Dreamworks</code>, but had forgotten that they are both in fact Dreamworks characters. While you focus on tagging your files with seemingly surface level attributes, your TagStudio library is building rich connections between tags and files that may not be fully apparent until being discovered through various search queries. While you were simply tagging images with <code>Shrek</code> and <code>Tulio</code>, you may have unlocked an easy way to search for \"2D Dreamworks Characters\" without having to explicitly tag for that!</p>"},{"location":"tags/#component-tags","title":"Component Tags","text":"<p>Coming in version 9.6.x</p> <p>Component tags will be built from a composition-based, or \"HAS\" type relationship between tags. This takes care of instances where an attribute may \"have\" another attribute, but doesn't inherit from it. Shrek may be an <code>Ogre</code>, he may be a <code>Character</code>, but he is NOT a <code>Leather Vest</code> - even if he's commonly seen with it. Component tags, along with the upcoming \"Tag Override\" feature, are built to handle these cases in a way that still simplifies the tagging process without adding too much undue complexity for the user.</p>"},{"location":"tags/#tag-appearance","title":"Tag Appearance","text":""},{"location":"tags/#color","title":"Color","text":"<p>Tags use a default uncolored appearance by default, however can take on a number of built-in and user-created colors and color palettes! Tag color palettes can be based on a single color value (see: TagStudio Standard, TagStudio Shades, TagStudio Pastels) or use an optional secondary color use for the text and optionally the tag border (e.g. TagStudio Neon).</p> <p></p>"},{"location":"tags/#user-created-colors","title":"User-Created Colors","text":"<p>Custom palettes and colors can be created via the Tag Color Manager. These colors will display alongside the built-in colors inside the tag selection window and are separated by their namespace names. Colors which use the secondary color for the tag border will be outlined in that color, otherwise they will only display the secondary color on the bottom of the swatch to indicate at a glance that the text colors are different.</p> <p></p>"},{"location":"tags/#icon","title":"Icon","text":"<p>Coming in version 9.6.x</p>"},{"location":"tags/#tag-properties","title":"Tag Properties","text":"<p>Properties are special attributes of tags that change their behavior in some way.</p>"},{"location":"tags/#is-category","title":"Is Category","text":"<p>The \"Is Category\" property of tags determines if a tag should be treated as a category itself when being organized inside the preview panel. If this tag or any tags inheriting from this tag (i.e. tags that have this tag as a \"Parent Tag\"), then these tags will appear under a separated group that's named after this tag. Tags inheriting from multiple \"category tags\" will still show up under any applicable category.</p> <p>This means that duplicates of tags can appear on entries if the tag inherits from multiple parent categories, however this is by design and reflects the nature of multiple inheritance. Any tags not inheriting from a category tag will simply show under a default \"Tag\" section.</p> <p></p>"},{"location":"tags/#built-in-tags-and-categories","title":"Built-In Tags and Categories","text":"<p>The built-in tags \"Favorite\" and \"Archived\" inherit from the built-in \"Meta Tags\" category which is marked as a category by default. This behavior of default tags can be fully customized by disabling the category option and/or by adding/removing the tags' Parent Tags.</p>"},{"location":"tags/#migrating-from-v94-libraries","title":"Migrating from v9.4 Libraries","text":"<p>Due to the nature of how tags and Tag Felids operated prior to v9.5, the organization style of Tag Categories vs Tag Fields is not 1:1. Instead of tags being organized into fields on a per-entry basis, tags themselves determine their organizational layout via the \"Is Property\" flag. Any tags (not currently inheriting from either the \"Favorite\" or \"Archived\" tags) will be shown under the default \"Tags\" header upon migrating to the v9.5+ library format. Similar organization to Tag Fields can be achieved by using the built-in \"Meta Tags\" tag or any other marked with \"Is Category\" and then setting those tags as parents for other tags to inherit from.</p>"},{"location":"tags/#is-hidden","title":"Is Hidden","text":"<p>Coming in version 9.6.x</p> <p>When the \"Is Hidden\" property is checked, any file entries tagged with this tag will not show up in searches by default. This property comes by default with the built-in \"Archived\" tag.</p>"},{"location":"tags/#tag-search-examples","title":"Tag Search Examples","text":"<p>The following are examples of how a set of given tags will respond to various search queries.</p> Tag Name Shorthand Aliases Parent Tags League of Legends \"League of Legends\" \"LoL\" [\"League\"] [\"Game\", \"Fantasy\"] Arcane \"Arcane\" \"\" [] [\"League of Legends\", \"Cartoon\"] Jinx (LoL) \"Jinx Piltover\" \"Jinx\" [\"Jinxy\", \"Jinxy Poo\"] [\"League of Legends\", \"Arcane\", \"Character\"] Zander (Arcane) \"Zander Zanderson\" \"Zander\" [] [\"Arcane\", \"Character\"] Mr. Legend (LoL) \"Mr. Legend\" \"\" [] [\"League of Legends\", \"Character\"] <p>The query \"Arcane\" will display results tagged with:</p> Tag Cause of Inclusion Tag Tree Lineage Arcane Direct match of tag name \"Arcane\" Jinx (LoL) Search term is set as parent tag \"Jinx (LoL) &gt; Arcane\" Zander (Arcane) Search term is set as parent tag \"Zander (Arcane) &gt; Arcane\" <p>The query \"League of Legends\" will display results tagged with:</p> Tag Cause of Inclusion Tag Tree Lineage League of Legends Direct match of tag name \"League of Legends\" Arcane Search term is set as parent tag \"Arcane &gt; League of Legends\" Jinx (LoL) Search term is set as parent tag \"Jinx (LoL) &gt; League of Legends\" Mr. Legend (LoL) Search term is set as parent tag \"Mr. Legend (LoL) &gt; League of Legends\" Zander (Arcane) Search term is a parent tag of a tag set as parent tag \"Zander (Arcane) &gt; Arcane &gt; League of Legends\" <p>Note: The query \"LoL\" will display the same results as the above example since \"LoL\" is the shorthand for \"League of Legends\".</p>"},{"location":"usage/","title":"Basic Usage","text":""},{"location":"usage/#creatingopening-a-library","title":"Creating/Opening a Library","text":"<p>With TagStudio opened, start by creating a new library or opening an existing one using File -&gt; Open/Create Library from the menu bar. TagStudio will automatically create a new library from the chosen directory if one does not already exist. Upon creating a new library, TagStudio will automatically scan your folders for files and add those to your library (no files are moved during this process!).</p>"},{"location":"usage/#refreshing-the-library","title":"Refreshing the Library","text":"<p>Libraries under 10,000 files automatically scan for new or modified files when opened. In order to refresh the library manually, select \"Refresh Directories\" under the File menu.</p>"},{"location":"usage/#adding-tags-to-file-entries","title":"Adding Tags to File Entries","text":"<p>Access the \"Add Tag\" search box by either clicking on the \"Add Tag\" button at the bottom of the right sidebar, accessing the \"Add Tags to Selected\" option from the File menu, or by pressing Ctrl+Shift+T.</p> <p>From here you can search for existing tags or create a new one if the one you're looking for doesn't exist. Click the \"+\" button next to any tags you want to the currently selected file entries. To quickly add the top result, press the Enter/Return key to add the topmost tag and reset the tag search. Press Enter/Return once more to close the dialog box. By using this method, you can quickly add various tags in quick succession just by using the keyboard!</p> <p>To remove a tag from a file entry, hover over the tag in the preview panel and click on the \"-\" icon that appears.</p>"},{"location":"usage/#adding-metadata-to-file-entries","title":"Adding Metadata to File Entries","text":"<p>To add a metadata field to a file entry, start by clicking the \"Add Field\" button at the bottom of the preview panel. From the dropdown menu, select the type of metadata field you\u2019d like to add to the entry</p>"},{"location":"usage/#editing-metadata-fields","title":"Editing Metadata Fields","text":""},{"location":"usage/#text-line-text-box","title":"Text Line / Text Box","text":"<p>Hover over the field and click the pencil icon. From there, add or edit text in the dialog box popup.</p>"},{"location":"usage/#creating-tags","title":"Creating Tags","text":"<p>Create a new tag by accessing the \"New Tag\" option from the Edit menu or by pressing Ctrl+T. In the tag creation panel, enter a tag name, optional shorthand name, optional tag aliases, optional parent tags, and an optional color.</p> <ul> <li>The tag name is the base name of the tag. This does NOT have to be unique!</li> <li>The tag shorthand is a special type of alias that displays in situations where screen space is more valuable, notably with name disambiguation.</li> <li>Aliases are alternate names for a tag. These let you search for terms other than the exact tag name in order to find the tag again.</li> <li>Parent Tags are tags in which this tag can substitute for in searches. In other words, tags under this section are parents of this tag.<ul> <li>Parent tags with the disambiguation check next to them will be used to help disambiguate tag names that may not be unique.</li> <li>For example: If you had a tag for \"Freddy Fazbear\", you might add \"Five Nights at Freddy's\" as one of the parent tags. If the disambiguation box is checked next to \"Five Nights at Freddy's\" parent tag, then the tag \"Freddy Fazbear\" will display as \"Freddy Fazbear (Five Nights at Freddy's)\". Furthermore, if the \"Five Nights at Freddy's\" tag has a shorthand like \"FNAF\", then the \"Freddy Fazbear\" tag will display as \"Freddy Fazbear (FNAF)\".</li> </ul> </li> <li>The color option lets you select an optional color palette to use for your tag.</li> <li>The \"Is Category\" property lets you treat this tag as a category under which itself and any child tags inheriting from it will be sorted by inside the preview panel.</li> </ul>"},{"location":"usage/#tag-manager","title":"Tag Manager","text":"<p>You can manage your library of tags by opening the \"Tag Manager\" panel from Edit -&gt; \"Manage Tags\". From here you can create, search for, edit, and permanently delete any tags you've created in your library.</p>"},{"location":"usage/#editing-tags","title":"Editing Tags","text":"<p>To edit a tag, click on it inside the preview panel or right-click the tag and select \"Edit Tag\" from the context menu.</p>"},{"location":"usage/#relinking-moved-files","title":"Relinking Moved Files","text":"<p>Inevitably some of the files inside your library will be renamed, moved, or deleted. If a file has been renamed or moved, TagStudio will display the thumbnail as a red broken chain link. To relink moved files or delete these entries, select the \"Manage Unlinked Entries\" option under the Tools menu. Click the \"Refresh\" button to scan your library for unlinked entries. Once complete, you can attempt to \"Search &amp; Relink\" any unlinked file entries to their respective files, or \"Delete Unlinked Entries\" in the event the original files have been deleted and you no longer wish to keep their entries inside your library.</p> <p>Warning</p> <p>There is currently no method to relink entries to files that have been renamed - only moved or deleted. This is a high priority for future releases.</p> <p>Warning</p> <p>If multiple matches for a moved file are found (matches are currently defined as files with a matching filename as the original), TagStudio will currently ignore the match groups. Adding a GUI for manual selection, as well as smarter automated relinking, are high priorities for future versions.</p>"},{"location":"usage/#saving-the-library","title":"Saving the Library","text":"<p>As of version 9.5, libraries are saved automatically as you go. To save a backup of your library, select File -&gt; Save Library Backup from the menu bar.</p>"},{"location":"usage/#launch-arguments","title":"Launch Arguments","text":"<p>There are a handful of launch arguments you can pass to TagStudio via the command line or a desktop shortcut.</p> Argument Short Description <code>--cache-file &lt;path&gt;</code> <code>-c</code> Path to a TagStudio .ini or .plist cache file to use. <code>--open &lt;path&gt;</code> <code>-o</code> Path to a TagStudio Library folder to open on start. <code>--settings-file &lt;path&gt;</code> <code>-s</code> Path to a TagStudio .toml global settings file to use. <code>--version</code> <code>-v</code> Displays TagStudio version information."},{"location":"help/ffmpeg/","title":"Installing FFmpeg","text":"<p>FFmpeg is required for thumbnail previews and playback features on audio and video files. FFmpeg is a free Open Source project dedicated to the handling of multimedia (video, audio, etc) files. For more information, see their official website at ffmpeg.org.</p>"},{"location":"help/ffmpeg/#installation-on-windows","title":"Installation on Windows","text":""},{"location":"help/ffmpeg/#prebuilt-binaries","title":"Prebuilt Binaries","text":"<p>Pre-built binaries from trusted sources are available on the FFmpeg website. Under \"More downloading options\" click on the Windows section, then under \"Windows EXE Files\" select a source to download a build from. Follow any further download instructions from whichever build website you choose.</p> <p></p> <p>Warning</p> <p>Do NOT download the source code by mistake!</p> <p>To Install:</p> <ol> <li>Download 7z or zip file and extract it (right click &gt; Extract All)</li> <li>Move extracted contents to a unique folder (i.e; <code>c:\\ffmpeg</code> or <code>c:\\Program Files\\ffmpeg</code>)</li> <li> <p>Add FFmpeg to your system PATH</p> <ol> <li>In Windows, search for or go to \"Edit the system environment variables\" under the Control Panel</li> <li>Under \"User Variables\", select \"Path\" then edit</li> <li>Click new and add <code>&lt;Your folder&gt;\\bin</code> (e.g; <code>c:\\ffmpeg\\bin</code> or <code>c:\\Program Files\\ffmpeg\\bin</code>)</li> <li>Click \"Okay\"</li> </ol> </li> </ol>"},{"location":"help/ffmpeg/#package-managers","title":"Package Managers","text":"<p>FFmpeg is also available from:</p> <ol> <li>WinGet (<code>winget install ffmpeg</code>)</li> <li>Scoop (<code>scoop install main/ffmpeg</code>)</li> <li>Chocolatey (<code>choco install ffmpeg-full</code>)</li> </ol>"},{"location":"help/ffmpeg/#installation-on-mac","title":"Installation on Mac","text":""},{"location":"help/ffmpeg/#homebrew","title":"Homebrew","text":"<p>FFmpeg is available under the macOS section of the FFmpeg website or can be installed via Homebrew using <code>brew install ffmpeg</code>.</p>"},{"location":"help/ffmpeg/#installation-on-linux","title":"Installation on Linux","text":""},{"location":"help/ffmpeg/#package-managers_1","title":"Package Managers","text":"<p>FFmpeg may be installed by default on some Linux distributions, but if not, it is available via your distribution package manager of choice:</p> <ol> <li>Debian/Ubuntu (<code>sudo apt install ffmpeg</code>)</li> <li>Fedora (<code>sudo dnf install ffmpeg-free</code>)</li> <li>Arch (<code>sudo pacman -S ffmpeg</code>)</li> </ol>"},{"location":"help/ffmpeg/#help","title":"Help","text":"<p>For additional help, please join the Discord or create an Issue on the GitHub repository</p>"}]}